#!/bin/bash -x

set +e

PROCESS_NAMES="bf_switchd bmswitchp4_drivers bmv2_p4_drivers simple_switch tofinobm_p4_drivers tofinobmswitchp4_drivers tofinobmv2 tofino-model tofinobmv2 run_p4_tests.sh"

cleanup() {
  set +e
  # Kill all tofino/driver processes
  echo "Killing $procs"
  sudo killall -q -9 $PROCESS_NAMES
  for i in $PROCESS_NAMES; do set -x; aa=$(pidof $i); sudo kill -9 $aa ; done
  set -e
}

ARCH="Tofino"
port_file="ports.json"
TEST_DIR="ptf/saiv2/"
TEST_PARAMS=""
DOD_TEST_MODE=""

# Set python version for test execution (python 2 by default)
PYTHON="python"

# Indicates if xunit xml report file are being generated by PTF
GEN_XML_OUTPUT=""

# Overriding default negative timeout (in seconds) in PTF tests for test execution speedup
PTF_NEGATIVE_TIMEOUT="0.1"

SKU="None"
INT_PORT_LOOP=""

while [[ $# -gt 0 ]]; do
    case "$1" in
      -t) TEST_DIR="$2"; shift 2;;
      -s) TEST_SUITE="$2"; shift 2;;
      --test_suite) TEST_SUITE="$2"; shift 2;;
      --arch) ARCH="$2"; shift 2;;
      --gen-xml-output) GEN_XML_OUTPUT="--gen-xml-output"; shift 1;;
      --test-params) TEST_PARAMS="$2"; shift 2;;
      --dod-test-mode) DOD_TEST_MODE="$1"; shift 1;;
      --int-port-loop) INT_PORT_LOOP="--int-port-loop $2"; shift 2;;
      --config-file) CONFIG_FILE="$2"; shift 2;;
      --sku) SKU="$2"; shift 2;;
      --port-file) PORT_FILE="$2"; shift 2;;
      --python3) PYTHON="python3"; shift 1;;
      --) shift; break;;
      *) shift;;
    esac
done

ARCH=$(echo $ARCH | awk '{print tolower($0)}')
case "$ARCH" in
  tofino2) CHIPTYPE=5; port_file="ports_tof2.json";;
  tofino2a0) CHIPTYPE=4; ARCH="tofino2"; port_file="ports_tof2.json";;
  tofino) CHIPTYPE=2;;
  tofinoa0) CHIPTYPE=1; ARCH="tofino";;
  *) echo "Invalid arch option specified ${ARCH}"; exit 1;;
esac
arch_folder=$ARCH

if [ -z "$CONFIG_FILE" ]; then
  CONFIG_FILE="/bf/install/share/p4/targets/${arch_folder}/switch-sai-cpu-veth.conf"
fi

if [ -z "$PORT_FILE" ]; then
  PORT_FILE="$WORKSPACE/ptf/$port_file"
else
  PORT_FILE="$WORKSPACE/ptf/$PORT_FILE"
fi

cleanup

/sandals/jenkins/veth_setup.sh 128 &> /dev/null
/sandals/jenkins/disable_ipv6.sh
/sandals/jenkins/veth_disable_ipv6.sh

sudo /bf/install/bin/tofino-model --port-monitor --logs-disable -d 1 -f $PORT_FILE --p4-target-config $CONFIG_FILE --install-dir /bf/install --sku $SKU --chip-type $CHIPTYPE $DOD_TEST_MODE $INT_PORT_LOOP &> /dev/null &

max_time=10

sleep $max_time

sudo LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/lib:/bf/install/lib /bf/install/bin/bf_switchd --install-dir /bf/install --conf-file $CONFIG_FILE --status-port 7777 --background &>tofino-driver.log &

model=$(pidof tofino-model)
echo "Started tofino-model pid:". $model

echo "Check driver status..."
STS_HOST_STR="--host localhost"
STATUS_PORT=7777

PYTHON_VER=`$PYTHON --version 2>&1 | awk {'print $2'} | awk -F"." {'print $1"."$2'}`
$PYTHON /bf/install/lib/python$PYTHON_VER/site-packages/p4testutils/bf_switchd_dev_status.py \
    --port $STATUS_PORT $STS_HOST_STR

driver=$(pidof bf_switchd)
echo "driver pid:". $driver

if [[ $TEST_PARAMS != "" ]]; then
    test_params="$TEST_PARAMS"
else
    test_params="test_port=3"
fi

set +e
RET=0
run_tests_command="PKTPY=False /bf/tools/run_p4_tests.sh -p switch -t $WORKSPACE/$TEST_DIR --test-params $test_params -f $PORT_FILE --arch $ARCH --default-negative-timeout $PTF_NEGATIVE_TIMEOUT $GEN_XML_OUTPUT"

if [[ ! -z "$TEST_SUITE" ]]; then
  run_tests_command+=" -s \"$TEST_SUITE\""
fi

eval WORKSPACE=/bf $run_tests_command || RET=$?

PROCESS_NAMES="bf_switchd tofino-model"
set +e
# Kill all tofino/driver processes
sudo killall -q -9 $PROCESS_NAMES

exit $RET
