#!/bin/bash -x

set +e

PROCESS_NAMES="bf_switchd bmswitchp4_drivers bmv2_p4_drivers simple_switch tofinobm_p4_drivers tofinobmswitchp4_drivers tofinobmv2 tofino-model tofinobmv2 run_p4_tests.sh"

cleanup() {
  set +e
  # Kill all tofino/driver processes
  echo "Killing $procs"
  sudo killall -q -9 $PROCESS_NAMES
  #sudo kill -9 $PIDS
  for i in $PROCESS_NAMES; do set -x; aa=$(pidof $i); sudo kill -9 $aa ; done
  set -e
}

REBOOT=""
ARCH="Tofino"
DOD_TEST_MODE=""

# Set python version for test execution (python 2 by default)
PYTHON="python"

# Indicates if xunit xml report file are being generated by PTF
GEN_XML_OUTPUT=""

PTF_DEFAULT_TIMEOUT="3"
# Overriding default negative timeout (in seconds) in PTF tests for test execution speedup
PTF_NEGATIVE_TIMEOUT="0.1"

while [[ $# -gt 0 ]]; do
    case "$1" in
      -s) TEST_SUITE="$2"; shift 2;;
      -c) SWITCH_CONF_FILE="$2"; shift 2;;
      -f) PORT_INFO_FILE="$2"; shift 2;;
      --test_suite) TEST_SUITE="$2"; shift 2;;
      --arch) ARCH="$2"; shift 2;;
      --dod-test-mode) DOD_TEST_MODE="$1"; shift 1;;
      --reboot) REBOOT="$2"; shift 2;;
      --gen-xml-output) GEN_XML_OUTPUT="--gen-xml-output"; shift 1;;
      --python3) PYTHON="python3"; shift 1;;
      --int-port-loop) LOOPBACK_PIPE_BITMAP="$2"; shift 2;;
      --) shift; break;;
      *) shift;;
    esac
done

ARCH=$(echo $ARCH | awk '{print tolower($0)}')
case "$ARCH" in
  tofino2) CHIPTYPE=5;;
  tofino2a0) CHIPTYPE=4; ARCH="tofino2";;
  tofino) CHIPTYPE=2;;
  tofinoa0) CHIPTYPE=1; ARCH="tofino";;
  *) echo "Invalid arch option specified ${ARCH}"; exit 1;;
esac
arch_folder=$ARCH

cleanup

/sandals/jenkins/veth_setup.sh 128 &> /dev/null
/sandals/jenkins/disable_ipv6.sh
/sandals/jenkins/veth_disable_ipv6.sh

# Added stdbuf -oL to force flushing stdout to file
sudo stdbuf -oL /bf/install/bin/tofino-model --port-monitor --logs-disable -d 1 -f ${WORKSPACE}/ptf/${PORT_INFO_FILE} \
--p4-target-config "/bf/install/share/p4/targets/${arch_folder}/${SWITCH_CONF_FILE}" --install-dir /bf/install --sku \
None --chip-type $CHIPTYPE $DOD_TEST_MODE --int-port-loop ${LOOPBACK_PIPE_BITMAP} >tofino-model.log 2>tofino-model_err.log &

max_time=10
time=0

# Start polling to verify if model started
while [ $time -le $max_time ]; do
  if grep -Fxq "Waiting for incoming connections..." tofino-model.log
  then
    echo "Tofino model started and waiting for incomming connections."
    break;
  elif [ $time -eq $max_time ]; then
    echo "Tofino model is not READY after $time seconds ! "
    sudo killall -q -9 "tofino-model"
    exit 1
  else
    time=$[time +1]
    sleep 1
  fi
done

sudo LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/lib:/bf/install/lib \
    /bf/install/bin/bf_switchd --install-dir /bf/install --conf-file "/bf/install/share/p4/targets/${arch_folder}/${SWITCH_CONF_FILE}" --status-port 7777 --background &>tofino-driver.log &

model=$(pidof tofino-model)
echo "Started tofino-model pid:". $model

echo "Check driver status..."
STS_HOST_STR="--host localhost"
STATUS_PORT=7777

PYTHON_VER=`$PYTHON --version 2>&1 | awk {'print $2'} | awk -F"." {'print $1"."$2'}`
$PYTHON /bf/install/lib/python$PYTHON_VER/site-packages/p4testutils/bf_switchd_dev_status.py \
    --port $STATUS_PORT $STS_HOST_STR

driver=$(pidof bf_switchd)
echo "driver pid:". $driver

tail -50 tofino-driver.log

set +e
RET=0

run_tests_command="/bf/tools/run_p4_tests.sh -p switch -t $WORKSPACE/ptf/api/ -f ${WORKSPACE}/ptf/${PORT_INFO_FILE} --test-params \"api_model_json='/bf/install/share/switch/aug_model.json'\" --arch $ARCH --default-timeout $PTF_DEFAULT_TIMEOUT --default-negative-timeout $PTF_NEGATIVE_TIMEOUT $GEN_XML_OUTPUT"

if [[ ! -z "$TEST_SUITE" ]]; then
  run_tests_command+=" -s \"$TEST_SUITE\""
fi

if [[ ! -z "$REBOOT" ]]; then
  run_tests_command+=" --reboot \"$REBOOT\""
fi

eval WORKSPACE=/bf $run_tests_command || RET=$?

PROCESS_NAMES="bf_switchd tofino-model"
set +e
# Kill all tofino/driver processes
sudo killall -q -9 $PROCESS_NAMES

exit $RET
