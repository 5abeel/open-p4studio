/*******************************************************************************
 *  Copyright (C) 2024 Intel Corporation
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *  http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing,
 *  software distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions
 *  and limitations under the License.
 *
 *
 *  SPDX-License-Identifier: Apache-2.0
 ******************************************************************************/
/*
 * This code is generated using  packet_path_counters.py ; Any edits to this
 * file will be lost.
 */

#ifndef __TOFINO_PKT_PATH_DISPLAY_H__
#define __TOFINO_PKT_PATH_DISPLAY_H__

#include <stddef.h>
#include <stdint.h>
#include <inttypes.h>
#include <target-sys/bf_sal/bf_sys_intf.h>
#include <pipe_mgr/pipe_mgr_tof_counters.h>

#if DVM_CONFIG_INCLUDE_UCLI == 1

#include <target-utils/uCli/ucli.h>
#include <target-utils/uCli/ucli_argparse.h>
#include <target-utils/uCli/ucli_handler_macros.h>

#endif

#if DVM_CONFIG_INCLUDE_UCLI == 1
extern void pipe_mgr_tof_pkt_path_display_ibuf_counter(
    ucli_context_t *uc, int hex, bf_dev_id_t devid, int p, int pg_port);
#endif
#if DVM_CONFIG_INCLUDE_UCLI == 1
extern void pipe_mgr_tof_pkt_path_display_iprsr_counter(
    ucli_context_t *uc, int hex, bf_dev_id_t devid, int p, int pg_port);
#endif
#if DVM_CONFIG_INCLUDE_UCLI == 1
extern void pipe_mgr_tof_pkt_path_display_idprsr_counter(ucli_context_t *uc,
                                                         int hex,
                                                         bf_dev_id_t devid,
                                                         int p);
#endif
#if DVM_CONFIG_INCLUDE_UCLI == 1
extern void pipe_mgr_tof_pkt_path_display_ebuf_counter(
    ucli_context_t *uc, int hex, bf_dev_id_t devid, int p, int pg_port);
#endif
#if DVM_CONFIG_INCLUDE_UCLI == 1
extern void pipe_mgr_tof_pkt_path_display_eprsr_counter(
    ucli_context_t *uc, int hex, bf_dev_id_t devid, int p, int pg_port);
#endif
#if DVM_CONFIG_INCLUDE_UCLI == 1
extern void pipe_mgr_tof_pkt_path_display_edprsr_counter(ucli_context_t *uc,
                                                         int hex,
                                                         bf_dev_id_t devid,
                                                         int p);
#endif
#if DVM_CONFIG_INCLUDE_UCLI == 1
extern void pipe_mgr_tof_pkt_path_display_pipe_counter(ucli_context_t *uc,
                                                       int hex,
                                                       bf_dev_id_t devid,
                                                       int p);
#endif
#if DVM_CONFIG_INCLUDE_UCLI == 1
extern void pipe_mgr_tof_pkt_path_display_interrupts_intr(
    ucli_context_t *uc, int hex, bf_dev_id_t devid, int p, int pg_port);
#endif
#if DVM_CONFIG_INCLUDE_UCLI == 1
extern void pipe_mgr_tof_pkt_path_display_dprsr_interrupt_intr(
    ucli_context_t *uc, int hex, bf_dev_id_t devid, int p);
#endif
extern void pipe_mgr_tof_pkt_path_clear_ibuf_counter(bf_dev_id_t devid,
                                                     int p,
                                                     int pg_port);
extern void pipe_mgr_tof_pkt_path_clear_iprsr_counter(bf_dev_id_t devid,
                                                      int p,
                                                      int pg_port);
extern void pipe_mgr_tof_pkt_path_clear_idprsr_counter(bf_dev_id_t devid,
                                                       int p);
extern void pipe_mgr_tof_pkt_path_clear_ebuf_counter(bf_dev_id_t devid,
                                                     int p,
                                                     int pg_port);
extern void pipe_mgr_tof_pkt_path_clear_eprsr_counter(bf_dev_id_t devid,
                                                      int p,
                                                      int pg_port);
extern void pipe_mgr_tof_pkt_path_clear_edprsr_counter(bf_dev_id_t devid,
                                                       int p);
extern void pipe_mgr_tof_pkt_path_clear_pipe_counter(bf_dev_id_t devid, int p);
extern void pipe_mgr_tof_pkt_path_clear_all_counter(bf_dev_id_t devid, int p);
extern bf_packetpath_counter_t *pipe_mgr_tof_pkt_path_ibuf_read_counter(
    bf_dev_id_t devid, int p, int port, int chan_numb, int *count);
extern bf_packetpath_counter_t *pipe_mgr_tof_pkt_path_iprsr_read_counter(
    bf_dev_id_t devid, int p, int port, int chan_numb, int *count);
extern bf_packetpath_counter_t *pipe_mgr_tof_pkt_path_idprsr_counter(
    bf_dev_id_t devid, int p, int *count);
extern bf_packetpath_counter_t *pipe_mgr_tof_pkt_path_ebuf_read_counter(
    bf_dev_id_t devid, int p, int port, int chan_numb, int *count);
extern bf_packetpath_counter_t *pipe_mgr_tof_pkt_path_eprsr_read_counter(
    bf_dev_id_t devid, int p, int port, int chan_numb, int *count);
extern bf_packetpath_counter_t *pipe_mgr_tof_pkt_path_edprsr_counter(
    bf_dev_id_t devid, int p, int *count);

typedef enum pipe_mgr_tof_pkt_path_counter_enum_ {
  IBUF_PKTS_FROM_MAC_ON_CHANNEL0,
  IBUF_PKTS_FROM_MAC_ON_CHANNEL1,
  IBUF_PKTS_FROM_MAC_ON_CHANNEL2,
  IBUF_PKTS_FROM_MAC_ON_CHANNEL3,
  IBUF_PKTS_FROM_CHANNEL0_SENT_TO_PARSER,
  IBUF_PKTS_FROM_CHANNEL1_SENT_TO_PARSER,
  IBUF_PKTS_FROM_CHANNEL2_SENT_TO_PARSER,
  IBUF_PKTS_FROM_CHANNEL3_SENT_TO_PARSER,
  IBUF_PKTS_FROM_CHANNEL0_SENT_TO_DEPARSER,
  IBUF_PKTS_FROM_CHANNEL1_SENT_TO_DEPARSER,
  IBUF_PKTS_FROM_CHANNEL2_SENT_TO_DEPARSER,
  IBUF_PKTS_FROM_CHANNEL3_SENT_TO_DEPARSER,
  IBUF_RECIRCULATION_PKTS_ON_CHANNEL0,
  IBUF_RECIRCULATION_PKTS_ON_CHANNEL1,
  IBUF_RECIRCULATION_PKTS_ON_CHANNEL2,
  IBUF_RECIRCULATION_PKTS_ON_CHANNEL3,
  IBUF_TOTAL_PKTS_DROPPED_ON_CHANNEL0,
  IBUF_TOTAL_PKTS_DROPPED_ON_CHANNEL1,
  IBUF_TOTAL_PKTS_DROPPED_ON_CHANNEL2,
  IBUF_TOTAL_PKTS_DROPPED_ON_CHANNEL3,
  IBUF_DISCARDED_PKTS_IN_IBUF_ON_CHANNEL0,
  IBUF_DISCARDED_PKTS_IN_IBUF_ON_CHANNEL1,
  IBUF_DISCARDED_PKTS_IN_IBUF_ON_CHANNEL2,
  IBUF_DISCARDED_PKTS_IN_IBUF_ON_CHANNEL3,
  IBUF_TRUNCATED_PKTS_ON_CHANNEL0,
  IBUF_TRUNCATED_PKTS_ON_CHANNEL1,
  IBUF_TRUNCATED_PKTS_ON_CHANNEL2,
  IBUF_TRUNCATED_PKTS_ON_CHANNEL3,
  IBUF_DISCARDED_RECIRCULATED_PKTS_ON_CH0,
  IBUF_DISCARDED_RECIRCULATED_PKTS_ON_CH1,
  IBUF_DISCARDED_RECIRCULATED_PKTS_ON_CH2,
  IBUF_DISCARDED_RECIRCULATED_PKTS_ON_CH3,
  IBUF_DISCARDED_PKTS_IN_PRSR_DUE_TO_IBUF_CH0_FULL_OR_PRSR_REQ_TO_DROP,
  IBUF_DISCARDED_PKTS_IN_PRSR_DUE_TO_IBUF_CH1_FULL_OR_PRSR_REQ_TO_DROP,
  IBUF_DISCARDED_PKTS_IN_PRSR_DUE_TO_IBUF_CH2_FULL_OR_PRSR_REQ_TO_DROP,
  IBUF_DISCARDED_PKTS_IN_PRSR_DUE_TO_IBUF_CH3_FULL_OR_PRSR_REQ_TO_DROP,
  IPRSR_TOTAL_PKTS_DROPPED_ON_CHANNEL0,
  IPRSR_TOTAL_PKTS_DROPPED_ON_CHANNEL1,
  IPRSR_TOTAL_PKTS_DROPPED_ON_CHANNEL2,
  IPRSR_TOTAL_PKTS_DROPPED_ON_CHANNEL3,
  IPRSR_OUTPUT_FIFO_FULL_COUNTER,
  IPRSR_OUTPUT_FIFO_STALL_COUNTER,
  IPRSR_TCAM_MATCH_ERROR,
  IPRSR_COUNTER_RANGE_ERROR,
  IPRSR_TIMEOUT_OR_EXCESS_STATE_ITERATION_ERROR,
  IPRSR_TIMEOUT_OR_EXCESS_CLOCK_CYCLE,
  IPRSR_EXTRACTION_SOURCE_ERROR_COUNTER,
  IPRSR_CONTAINER_SIZE_ERROR_COUNTER,
  IPRSR_PHV_OWNER_ERROR_COUNTER,
  IPRSR_PHV_MULTIPLE_WRITE_ERROR,
  IPRSR_FCS_ERROR,
  IPRSR_CHECKSUM_ERROR,
  IPRSR_TCAM_PARITY_ERROR,
  IDPRSR_HEADER_TOO_LONG,
  IDPRSR_VALID_PHV_INTO_DEPARSER,
  IDPRSR_VALID_TPHV_INTO_DEPARSER,
  IDPRSR_PACKETS_INTO_DEPARSER,
  IDPRSR_PACKETS_DISCARDED,
  IDPRSR_PACKETS_RESUBMITTED,
  IDPRSR_LEARN_COUNTER_DUE_TO_PACKETS,
  IDPRSR_PACKETS_PROCESSED_IN_OUTPUT_PHASE,
  IDPRSR_CRC_ERROR_ON_PACKETS_FROM_IBUF_0,
  IDPRSR_CRC_ERROR_ON_PACKETS_FROM_IBUF_1,
  IDPRSR_CRC_ERROR_ON_PACKETS_FROM_IBUF_2,
  IDPRSR_CRC_ERROR_ON_PACKETS_FROM_IBUF_3,
  IDPRSR_CRC_ERROR_ON_PACKETS_FROM_IBUF_4,
  IDPRSR_CRC_ERROR_ON_PACKETS_FROM_IBUF_5,
  IDPRSR_CRC_ERROR_ON_PACKETS_FROM_IBUF_6,
  IDPRSR_CRC_ERROR_ON_PACKETS_FROM_IBUF_7,
  IDPRSR_CRC_ERROR_ON_PACKETS_FROM_IBUF_8,
  IDPRSR_CRC_ERROR_ON_PACKETS_FROM_IBUF_9,
  IDPRSR_CRC_ERROR_ON_PACKETS_FROM_IBUF_10,
  IDPRSR_CRC_ERROR_ON_PACKETS_FROM_IBUF_11,
  IDPRSR_CRC_ERROR_ON_PACKETS_FROM_IBUF_12,
  IDPRSR_CRC_ERROR_ON_PACKETS_FROM_IBUF_13,
  IDPRSR_CRC_ERROR_ON_PACKETS_FROM_IBUF_14,
  IDPRSR_CRC_ERROR_ON_PACKETS_FROM_IBUF_15,
  IDPRSR_CRC_ERROR_ON_PACKETS_FROM_IBUF_16,
  IDPRSR_CRC_ERROR_ON_PACKETS_FROM_IBUF_17,
  IDPRSR_CRC_ERROR_ON_PACKETS_FROM_IBUF_18,
  IDPRSR_CRC_ERROR_ON_PACKETS_FROM_IBUF_19,
  IDPRSR_CRC_ERROR_ON_PACKETS_FROM_IBUF_20,
  IDPRSR_CRC_ERROR_ON_PACKETS_FROM_IBUF_21,
  IDPRSR_CRC_ERROR_ON_PACKETS_FROM_IBUF_22,
  IDPRSR_CRC_ERROR_ON_PACKETS_FROM_IBUF_23,
  IDPRSR_CRC_ERROR_ON_PACKETS_FROM_IBUF_24,
  IDPRSR_CRC_ERROR_ON_PACKETS_FROM_IBUF_25,
  IDPRSR_CRC_ERROR_ON_PACKETS_FROM_IBUF_26,
  IDPRSR_CRC_ERROR_ON_PACKETS_FROM_IBUF_27,
  IDPRSR_CRC_ERROR_ON_PACKETS_FROM_IBUF_28,
  IDPRSR_CRC_ERROR_ON_PACKETS_FROM_IBUF_29,
  IDPRSR_CRC_ERROR_ON_PACKETS_FROM_IBUF_30,
  IDPRSR_CRC_ERROR_ON_PACKETS_FROM_IBUF_31,
  IDPRSR_CRC_ERROR_ON_PACKETS_FROM_IBUF_32,
  IDPRSR_CRC_ERROR_ON_PACKETS_FROM_IBUF_33,
  IDPRSR_CRC_ERROR_ON_PACKETS_FROM_IBUF_34,
  IDPRSR_CRC_ERROR_ON_PACKETS_FROM_IBUF_35,
  IDPRSR_CRC_ERROR_ON_PACKETS_FROM_IBUF_36,
  IDPRSR_CRC_ERROR_ON_PACKETS_FROM_IBUF_37,
  IDPRSR_CRC_ERROR_ON_PACKETS_FROM_IBUF_38,
  IDPRSR_CRC_ERROR_ON_PACKETS_FROM_IBUF_39,
  IDPRSR_CRC_ERROR_ON_PACKETS_FROM_IBUF_40,
  IDPRSR_CRC_ERROR_ON_PACKETS_FROM_IBUF_41,
  IDPRSR_CRC_ERROR_ON_PACKETS_FROM_IBUF_42,
  IDPRSR_CRC_ERROR_ON_PACKETS_FROM_IBUF_43,
  IDPRSR_CRC_ERROR_ON_PACKETS_FROM_IBUF_44,
  IDPRSR_CRC_ERROR_ON_PACKETS_FROM_IBUF_45,
  IDPRSR_CRC_ERROR_ON_PACKETS_FROM_IBUF_46,
  IDPRSR_CRC_ERROR_ON_PACKETS_FROM_IBUF_47,
  IDPRSR_CRC_ERROR_ON_PACKETS_FROM_IBUF_48,
  IDPRSR_CRC_ERROR_ON_PACKETS_FROM_IBUF_49,
  IDPRSR_CRC_ERROR_ON_PACKETS_FROM_IBUF_50,
  IDPRSR_CRC_ERROR_ON_PACKETS_FROM_IBUF_51,
  IDPRSR_CRC_ERROR_ON_PACKETS_FROM_IBUF_52,
  IDPRSR_CRC_ERROR_ON_PACKETS_FROM_IBUF_53,
  IDPRSR_CRC_ERROR_ON_PACKETS_FROM_IBUF_54,
  IDPRSR_CRC_ERROR_ON_PACKETS_FROM_IBUF_55,
  IDPRSR_CRC_ERROR_ON_PACKETS_FROM_IBUF_56,
  IDPRSR_CRC_ERROR_ON_PACKETS_FROM_IBUF_57,
  IDPRSR_CRC_ERROR_ON_PACKETS_FROM_IBUF_58,
  IDPRSR_CRC_ERROR_ON_PACKETS_FROM_IBUF_59,
  IDPRSR_CRC_ERROR_ON_PACKETS_FROM_IBUF_60,
  IDPRSR_CRC_ERROR_ON_PACKETS_FROM_IBUF_61,
  IDPRSR_CRC_ERROR_ON_PACKETS_FROM_IBUF_62,
  IDPRSR_CRC_ERROR_ON_PACKETS_FROM_IBUF_63,
  IDPRSR_CRC_ERROR_ON_PACKETS_FROM_IBUF_64,
  IDPRSR_CRC_ERROR_ON_PACKETS_FROM_IBUF_65,
  IDPRSR_CRC_ERROR_ON_PACKETS_FROM_IBUF_66,
  IDPRSR_CRC_ERROR_ON_PACKETS_FROM_IBUF_67,
  IDPRSR_CRC_ERROR_ON_PACKETS_FROM_IBUF_68,
  IDPRSR_CRC_ERROR_ON_PACKETS_FROM_IBUF_69,
  IDPRSR_CRC_ERROR_ON_PACKETS_FROM_IBUF_70,
  IDPRSR_CRC_ERROR_ON_PACKETS_FROM_IBUF_71,
  IDPRSR_ERRORED_PACKETS_TO_TM,
  IDPRSR_ERRORED_PACKETS_FROM_IBUF_TO_ICTM,
  IDPRSR_PACKETS_SENT_TO_TM,
  IDPRSR_PACKETS_DISCARDED_AT_TM_INTERFACE,
  IDPRSR_PACKETS_SENT_TO_INGRESS_MIRROR_BUFFER,
  EPB_TOTAL_PKTS_BYPASSING_EPIPE_ON_CHANNEL_0,
  EPB_TOTAL_PKTS_BYPASSING_EPIPE_ON_CHANNEL_1,
  EPB_TOTAL_PKTS_BYPASSING_EPIPE_ON_CHANNEL_2,
  EPB_TOTAL_PKTS_BYPASSING_EPIPE_ON_CHANNEL_3,
  EPB_TOTAL_PKTS_SENT_TO_EPIPE_ON_CHANNEL_0,
  EPB_TOTAL_PKTS_SENT_TO_EPIPE_ON_CHANNEL_1,
  EPB_TOTAL_PKTS_SENT_TO_EPIPE_ON_CHANNEL_2,
  EPB_TOTAL_PKTS_SENT_TO_EPIPE_ON_CHANNEL_3,
  EPRSR_OUTPUT_FIFO_FULL_COUNTER,
  EPRSR_OUTPUT_FIFO_STALL_COUNTER,
  EPRSR_TOTAL_PKTS_DROPPED_ON_CHANNEL0,
  EPRSR_TOTAL_PKTS_DROPPED_ON_CHANNEL1,
  EPRSR_TOTAL_PKTS_DROPPED_ON_CHANNEL2,
  EPRSR_TOTAL_PKTS_DROPPED_ON_CHANNEL3,
  EPRSR_TCAM_MATCH_ERROR,
  EPRSR_PARTIAL_HEADER_ERROR,
  EPRSR_COUNTER_RANGE_ERROR,
  EPRSR_TIMEOUT_OR_EXCESS_STATE_ITERATION_ERROR,
  EPRSR_TIMEOUT_OR_EXCESS_CLOCK_CYCLE,
  EPRSR_EXTRACTION_SOURCE_ERROR_COUNTER,
  EPRSR_CONTAINER_SIZE_ERROR_COUNTER,
  EPRSR_PHV_OWNER_ERROR_COUNTER,
  EPRSR_PHV_MULTIPLE_WRITE_ERROR,
  EPRSR_FCS_ERROR,
  EPRSR_CHECKSUM_ERROR,
  EPRSR_TCAM_PARITY_ERROR,
  EDPRSR_HEADER_TOO_LONG,
  EDPRSR_VALID_PHV_INTO_DEPARSER,
  EDPRSR_VALID_TPHV_INTO_DEPARSER,
  EDPRSR_PACKETS_PROCESSED_IN_OUTPUT_PHASE,
  EDPRSR_CRC_ERROR_ON_PACKETS_FROM_EBUF_0,
  EDPRSR_CRC_ERROR_ON_PACKETS_FROM_EBUF_1,
  EDPRSR_CRC_ERROR_ON_PACKETS_FROM_EBUF_2,
  EDPRSR_CRC_ERROR_ON_PACKETS_FROM_EBUF_3,
  EDPRSR_CRC_ERROR_ON_PACKETS_FROM_EBUF_4,
  EDPRSR_CRC_ERROR_ON_PACKETS_FROM_EBUF_5,
  EDPRSR_CRC_ERROR_ON_PACKETS_FROM_EBUF_6,
  EDPRSR_CRC_ERROR_ON_PACKETS_FROM_EBUF_7,
  EDPRSR_CRC_ERROR_ON_PACKETS_FROM_EBUF_8,
  EDPRSR_CRC_ERROR_ON_PACKETS_FROM_EBUF_9,
  EDPRSR_CRC_ERROR_ON_PACKETS_FROM_EBUF_10,
  EDPRSR_CRC_ERROR_ON_PACKETS_FROM_EBUF_11,
  EDPRSR_CRC_ERROR_ON_PACKETS_FROM_EBUF_12,
  EDPRSR_CRC_ERROR_ON_PACKETS_FROM_EBUF_13,
  EDPRSR_CRC_ERROR_ON_PACKETS_FROM_EBUF_14,
  EDPRSR_CRC_ERROR_ON_PACKETS_FROM_EBUF_15,
  EDPRSR_CRC_ERROR_ON_PACKETS_FROM_EBUF_16,
  EDPRSR_CRC_ERROR_ON_PACKETS_FROM_EBUF_17,
  EDPRSR_CRC_ERROR_ON_PACKETS_FROM_EBUF_18,
  EDPRSR_CRC_ERROR_ON_PACKETS_FROM_EBUF_19,
  EDPRSR_CRC_ERROR_ON_PACKETS_FROM_EBUF_20,
  EDPRSR_CRC_ERROR_ON_PACKETS_FROM_EBUF_21,
  EDPRSR_CRC_ERROR_ON_PACKETS_FROM_EBUF_22,
  EDPRSR_CRC_ERROR_ON_PACKETS_FROM_EBUF_23,
  EDPRSR_CRC_ERROR_ON_PACKETS_FROM_EBUF_24,
  EDPRSR_CRC_ERROR_ON_PACKETS_FROM_EBUF_25,
  EDPRSR_CRC_ERROR_ON_PACKETS_FROM_EBUF_26,
  EDPRSR_CRC_ERROR_ON_PACKETS_FROM_EBUF_27,
  EDPRSR_CRC_ERROR_ON_PACKETS_FROM_EBUF_28,
  EDPRSR_CRC_ERROR_ON_PACKETS_FROM_EBUF_29,
  EDPRSR_CRC_ERROR_ON_PACKETS_FROM_EBUF_30,
  EDPRSR_CRC_ERROR_ON_PACKETS_FROM_EBUF_31,
  EDPRSR_CRC_ERROR_ON_PACKETS_FROM_EBUF_32,
  EDPRSR_CRC_ERROR_ON_PACKETS_FROM_EBUF_33,
  EDPRSR_CRC_ERROR_ON_PACKETS_FROM_EBUF_34,
  EDPRSR_CRC_ERROR_ON_PACKETS_FROM_EBUF_35,
  EDPRSR_CRC_ERROR_ON_PACKETS_FROM_EBUF_36,
  EDPRSR_CRC_ERROR_ON_PACKETS_FROM_EBUF_37,
  EDPRSR_CRC_ERROR_ON_PACKETS_FROM_EBUF_38,
  EDPRSR_CRC_ERROR_ON_PACKETS_FROM_EBUF_39,
  EDPRSR_CRC_ERROR_ON_PACKETS_FROM_EBUF_40,
  EDPRSR_CRC_ERROR_ON_PACKETS_FROM_EBUF_41,
  EDPRSR_CRC_ERROR_ON_PACKETS_FROM_EBUF_42,
  EDPRSR_CRC_ERROR_ON_PACKETS_FROM_EBUF_43,
  EDPRSR_CRC_ERROR_ON_PACKETS_FROM_EBUF_44,
  EDPRSR_CRC_ERROR_ON_PACKETS_FROM_EBUF_45,
  EDPRSR_CRC_ERROR_ON_PACKETS_FROM_EBUF_46,
  EDPRSR_CRC_ERROR_ON_PACKETS_FROM_EBUF_47,
  EDPRSR_CRC_ERROR_ON_PACKETS_FROM_EBUF_48,
  EDPRSR_CRC_ERROR_ON_PACKETS_FROM_EBUF_49,
  EDPRSR_CRC_ERROR_ON_PACKETS_FROM_EBUF_50,
  EDPRSR_CRC_ERROR_ON_PACKETS_FROM_EBUF_51,
  EDPRSR_CRC_ERROR_ON_PACKETS_FROM_EBUF_52,
  EDPRSR_CRC_ERROR_ON_PACKETS_FROM_EBUF_53,
  EDPRSR_CRC_ERROR_ON_PACKETS_FROM_EBUF_54,
  EDPRSR_CRC_ERROR_ON_PACKETS_FROM_EBUF_55,
  EDPRSR_CRC_ERROR_ON_PACKETS_FROM_EBUF_56,
  EDPRSR_CRC_ERROR_ON_PACKETS_FROM_EBUF_57,
  EDPRSR_CRC_ERROR_ON_PACKETS_FROM_EBUF_58,
  EDPRSR_CRC_ERROR_ON_PACKETS_FROM_EBUF_59,
  EDPRSR_CRC_ERROR_ON_PACKETS_FROM_EBUF_60,
  EDPRSR_CRC_ERROR_ON_PACKETS_FROM_EBUF_61,
  EDPRSR_CRC_ERROR_ON_PACKETS_FROM_EBUF_62,
  EDPRSR_CRC_ERROR_ON_PACKETS_FROM_EBUF_63,
  EDPRSR_CRC_ERROR_ON_PACKETS_FROM_EBUF_64,
  EDPRSR_CRC_ERROR_ON_PACKETS_FROM_EBUF_65,
  EDPRSR_CRC_ERROR_ON_PACKETS_FROM_EBUF_66,
  EDPRSR_CRC_ERROR_ON_PACKETS_FROM_EBUF_67,
  EDPRSR_CRC_ERROR_ON_PACKETS_FROM_EBUF_68,
  EDPRSR_CRC_ERROR_ON_PACKETS_FROM_EBUF_69,
  EDPRSR_CRC_ERROR_ON_PACKETS_FROM_EBUF_70,
  EDPRSR_CRC_ERROR_ON_PACKETS_FROM_EBUF_71,
  EDPRSR_ERRORED_PACKETS_FROM_DEPRSR_TO_EBUF,
  EDPRSR_ERRORED_PACKETS_FROM_EBUF_TO_ECTM,
  EDPRSR_PACKETS_SENT_OUT_OF_EGRESS_DEPARSER,
  EDPRSR_PACKETS_DISCARDED,
  EDPRSR_PACKETS_SENT_TO_EGRESS_MIRROR_BUFFER,
  BF_MAX_PKT_PATH_COUNTER_INDEX,
} pipe_mgr_tof_pkt_path_counter_en;

extern const char *pipe_mgr_tof_pkt_path_get_counter_description(
    uint32_t description_index);
#endif
