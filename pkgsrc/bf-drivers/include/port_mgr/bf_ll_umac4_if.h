/*******************************************************************************
 *  Copyright (C) 2024 Intel Corporation
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *  http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing,
 *  software distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions
 *  and limitations under the License.
 *
 *
 *  SPDX-License-Identifier: Apache-2.0
 ******************************************************************************/

/* clang-format off */
bf_status_t bf_ll_umac4_chmode0__chmode__mode_rd(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t *fld64, bool hw);
bf_status_t bf_ll_umac4_chmode0__chmode__mode_wr(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t  fld64, bool hw);
bf_status_t bf_ll_umac4_chmode0__chmode__mode_rmw(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t  fld64);
bf_status_t bf_ll_umac4_chmode0__chmode__txswrst_rd(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t *fld64, bool hw);
bf_status_t bf_ll_umac4_chmode0__chmode__txswrst_wr(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t  fld64, bool hw);
bf_status_t bf_ll_umac4_chmode0__chmode__txswrst_rmw(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t  fld64);
bf_status_t bf_ll_umac4_chmode0__chmode__rxswrst_rd(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t *fld64, bool hw);
bf_status_t bf_ll_umac4_chmode0__chmode__rxswrst_wr(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t  fld64, bool hw);
bf_status_t bf_ll_umac4_chmode0__chmode__rxswrst_rmw(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t  fld64);
bf_status_t bf_ll_umac4_chmode0__chmode__txen_rd(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t *fld64, bool hw);
bf_status_t bf_ll_umac4_chmode0__chmode__txen_wr(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t  fld64, bool hw);
bf_status_t bf_ll_umac4_chmode0__chmode__txen_rmw(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t  fld64);
bf_status_t bf_ll_umac4_chmode0__chmode__txdrain_rd(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t *fld64, bool hw);
bf_status_t bf_ll_umac4_chmode0__chmode__txdrain_wr(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t  fld64, bool hw);
bf_status_t bf_ll_umac4_chmode0__chmode__txdrain_rmw(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t  fld64);
bf_status_t bf_ll_umac4_chmode0__chmode__rxen_rd(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t *fld64, bool hw);
bf_status_t bf_ll_umac4_chmode0__chmode__rxen_wr(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t  fld64, bool hw);
bf_status_t bf_ll_umac4_chmode0__chmode__rxen_rmw(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t  fld64);
bf_status_t bf_ll_umac4_chmode0__chmode__gmiilpbk_rd(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t *fld64, bool hw);
bf_status_t bf_ll_umac4_chmode0__chmode__gmiilpbk_wr(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t  fld64, bool hw);
bf_status_t bf_ll_umac4_chmode0__chmode__gmiilpbk_rmw(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t  fld64);
bf_status_t bf_ll_umac4_chmode0__chmode__txjabber_rd(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t *fld64, bool hw);
bf_status_t bf_ll_umac4_chmode0__chmode__txjabber_wr(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t  fld64, bool hw);
bf_status_t bf_ll_umac4_chmode0__chmode__txjabber_rmw(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t  fld64);
bf_status_t bf_ll_umac4_chmode0__chmode__rxjabber_rd(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t *fld64, bool hw);
bf_status_t bf_ll_umac4_chmode0__chmode__rxjabber_wr(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t  fld64, bool hw);
bf_status_t bf_ll_umac4_chmode0__chmode__rxjabber_rmw(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t  fld64);
bf_status_t bf_ll_umac4_chmode0__chmode__disfcs_rd(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t *fld64, bool hw);
bf_status_t bf_ll_umac4_chmode0__chmode__disfcs_wr(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t  fld64, bool hw);
bf_status_t bf_ll_umac4_chmode0__chmode__disfcs_rmw(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t  fld64);
bf_status_t bf_ll_umac4_chmode0__chmode__invfcs_rd(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t *fld64, bool hw);
bf_status_t bf_ll_umac4_chmode0__chmode__invfcs_wr(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t  fld64, bool hw);
bf_status_t bf_ll_umac4_chmode0__chmode__invfcs_rmw(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t  fld64);
bf_status_t bf_ll_umac4_chmode0__chmode__ignfcs_rd(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t *fld64, bool hw);
bf_status_t bf_ll_umac4_chmode0__chmode__ignfcs_wr(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t  fld64, bool hw);
bf_status_t bf_ll_umac4_chmode0__chmode__ignfcs_rmw(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t  fld64);
bf_status_t bf_ll_umac4_chmode0__chmode__stripfcs_rd(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t *fld64, bool hw);
bf_status_t bf_ll_umac4_chmode0__chmode__stripfcs_wr(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t  fld64, bool hw);
bf_status_t bf_ll_umac4_chmode0__chmode__stripfcs_rmw(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t  fld64);
bf_status_t bf_ll_umac4_chmode0__chmode__ifglen_rd(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t *fld64, bool hw);
bf_status_t bf_ll_umac4_chmode0__chmode__ifglen_wr(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t  fld64, bool hw);
bf_status_t bf_ll_umac4_chmode0__chmode__ifglen_rmw(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t  fld64);
bf_status_t bf_ll_umac4_chmode0__chmode__ifgpacing_rd(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t *fld64, bool hw);
bf_status_t bf_ll_umac4_chmode0__chmode__ifgpacing_wr(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t  fld64, bool hw);
bf_status_t bf_ll_umac4_chmode0__chmode__ifgpacing_rmw(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t  fld64);
bf_status_t bf_ll_umac4_maccfg0__maccfg__disfcsonerr_rd(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t *fld64, bool hw);
bf_status_t bf_ll_umac4_maccfg0__maccfg__disfcsonerr_wr(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t  fld64, bool hw);
bf_status_t bf_ll_umac4_maccfg0__maccfg__disfcsonerr_rmw(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t  fld64);
bf_status_t bf_ll_umac4_maccfg0__maccfg__txfcen_rd(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t *fld64, bool hw);
bf_status_t bf_ll_umac4_maccfg0__maccfg__txfcen_wr(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t  fld64, bool hw);
bf_status_t bf_ll_umac4_maccfg0__maccfg__txfcen_rmw(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t  fld64);
bf_status_t bf_ll_umac4_maccfg0__maccfg__rxfcen_rd(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t *fld64, bool hw);
bf_status_t bf_ll_umac4_maccfg0__maccfg__rxfcen_wr(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t  fld64, bool hw);
bf_status_t bf_ll_umac4_maccfg0__maccfg__rxfcen_rmw(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t  fld64);
bf_status_t bf_ll_umac4_maccfg0__maccfg__rxpfcen_rd(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t *fld64, bool hw);
bf_status_t bf_ll_umac4_maccfg0__maccfg__rxpfcen_wr(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t  fld64, bool hw);
bf_status_t bf_ll_umac4_maccfg0__maccfg__rxpfcen_rmw(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t  fld64);
bf_status_t bf_ll_umac4_maccfg0__maccfg__rxfctotx_rd(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t *fld64, bool hw);
bf_status_t bf_ll_umac4_maccfg0__maccfg__rxfctotx_wr(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t  fld64, bool hw);
bf_status_t bf_ll_umac4_maccfg0__maccfg__rxfctotx_rmw(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t  fld64);
bf_status_t bf_ll_umac4_maccfg0__maccfg__rxfilterfc_rd(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t *fld64, bool hw);
bf_status_t bf_ll_umac4_maccfg0__maccfg__rxfilterfc_wr(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t  fld64, bool hw);
bf_status_t bf_ll_umac4_maccfg0__maccfg__rxfilterfc_rmw(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t  fld64);
bf_status_t bf_ll_umac4_maccfg0__maccfg__rxfilterpfc_rd(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t *fld64, bool hw);
bf_status_t bf_ll_umac4_maccfg0__maccfg__rxfilterpfc_wr(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t  fld64, bool hw);
bf_status_t bf_ll_umac4_maccfg0__maccfg__rxfilterpfc_rmw(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t  fld64);
bf_status_t bf_ll_umac4_maccfg0__maccfg__txpadrunt_rd(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t *fld64, bool hw);
bf_status_t bf_ll_umac4_maccfg0__maccfg__txpadrunt_wr(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t  fld64, bool hw);
bf_status_t bf_ll_umac4_maccfg0__maccfg__txpadrunt_rmw(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t  fld64);
bf_status_t bf_ll_umac4_maccfg0__maccfg__txwrthresh_rd(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t *fld64, bool hw);
bf_status_t bf_ll_umac4_maccfg0__maccfg__txwrthresh_wr(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t  fld64, bool hw);
bf_status_t bf_ll_umac4_maccfg0__maccfg__txwrthresh_rmw(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t  fld64);
bf_status_t bf_ll_umac4_maccfg0__maccfg__txrdthresh_rd(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t *fld64, bool hw);
bf_status_t bf_ll_umac4_maccfg0__maccfg__txrdthresh_wr(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t  fld64, bool hw);
bf_status_t bf_ll_umac4_maccfg0__maccfg__txrdthresh_rmw(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t  fld64);
bf_status_t bf_ll_umac4_maccfg0__maccfg__txlfault_rd(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t *fld64, bool hw);
bf_status_t bf_ll_umac4_maccfg0__maccfg__txlfault_wr(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t  fld64, bool hw);
bf_status_t bf_ll_umac4_maccfg0__maccfg__txlfault_rmw(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t  fld64);
bf_status_t bf_ll_umac4_maccfg0__maccfg__txrfault_rd(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t *fld64, bool hw);
bf_status_t bf_ll_umac4_maccfg0__maccfg__txrfault_wr(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t  fld64, bool hw);
bf_status_t bf_ll_umac4_maccfg0__maccfg__txrfault_rmw(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t  fld64);
bf_status_t bf_ll_umac4_maccfg0__maccfg__txidle_rd(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t *fld64, bool hw);
bf_status_t bf_ll_umac4_maccfg0__maccfg__txidle_wr(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t  fld64, bool hw);
bf_status_t bf_ll_umac4_maccfg0__maccfg__txidle_rmw(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t  fld64);
bf_status_t bf_ll_umac4_maccfg0__maccfg__rxpadrunt_rd(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t *fld64, bool hw);
bf_status_t bf_ll_umac4_maccfg0__maccfg__rxpadrunt_wr(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t  fld64, bool hw);
bf_status_t bf_ll_umac4_maccfg0__maccfg__rxpadrunt_rmw(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t  fld64);
bf_status_t bf_ll_umac4_maccfg0__maccfg__rxlfault_rd(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t *fld64, bool hw);
bf_status_t bf_ll_umac4_maccfg0__maccfg__rxlfault_wr(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t  fld64, bool hw);
bf_status_t bf_ll_umac4_maccfg0__maccfg__rxlfault_rmw(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t  fld64);
bf_status_t bf_ll_umac4_maccfg0__maccfg__rxrfault_rd(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t *fld64, bool hw);
bf_status_t bf_ll_umac4_maccfg0__maccfg__rxrfault_wr(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t  fld64, bool hw);
bf_status_t bf_ll_umac4_maccfg0__maccfg__rxrfault_rmw(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t  fld64);
bf_status_t bf_ll_umac4_maccfg0__maccfg__rxidle_rd(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t *fld64, bool hw);
bf_status_t bf_ll_umac4_maccfg0__maccfg__rxidle_wr(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t  fld64, bool hw);
bf_status_t bf_ll_umac4_maccfg0__maccfg__rxidle_rmw(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t  fld64);
bf_status_t bf_ll_umac4_maccfg0__maccfg__statsclr_rd(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t *fld64, bool hw);
bf_status_t bf_ll_umac4_maccfg0__maccfg__statsclr_wr(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t  fld64, bool hw);
bf_status_t bf_ll_umac4_maccfg0__maccfg__statsclr_rmw(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t  fld64);
bf_status_t bf_ll_umac4_maccfg0__maccfg__txignorerx_rd(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t *fld64, bool hw);
bf_status_t bf_ll_umac4_maccfg0__maccfg__txignorerx_wr(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t  fld64, bool hw);
bf_status_t bf_ll_umac4_maccfg0__maccfg__txignorerx_rmw(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t  fld64);
bf_status_t bf_ll_umac4_maccfg0__maccfg__txpfcen_rd(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t *fld64, bool hw);
bf_status_t bf_ll_umac4_maccfg0__maccfg__txpfcen_wr(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t  fld64, bool hw);
bf_status_t bf_ll_umac4_maccfg0__maccfg__txpfcen_rmw(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t  fld64);
bf_status_t bf_ll_umac4_chconfig120__chconfig12__txvlantag_rd(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t *fld64, bool hw);
bf_status_t bf_ll_umac4_chconfig120__chconfig12__txvlantag_wr(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t  fld64, bool hw);
bf_status_t bf_ll_umac4_chconfig120__chconfig12__txvlantag_rmw(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t  fld64);
bf_status_t bf_ll_umac4_chconfig30__chconfig3__ifgppm_rd(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t *fld64, bool hw);
bf_status_t bf_ll_umac4_chconfig30__chconfig3__ifgppm_wr(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t  fld64, bool hw);
bf_status_t bf_ll_umac4_chconfig30__chconfig3__ifgppm_rmw(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t  fld64);
bf_status_t bf_ll_umac4_chconfig30__chconfig3__rxmaxfrmsize_rd(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t *fld64, bool hw);
bf_status_t bf_ll_umac4_chconfig30__chconfig3__rxmaxfrmsize_wr(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t  fld64, bool hw);
bf_status_t bf_ll_umac4_chconfig30__chconfig3__rxmaxfrmsize_rmw(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t  fld64);
bf_status_t bf_ll_umac4_chconfig30__chconfig3__txpreamble_rd(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t *fld64, bool hw);
bf_status_t bf_ll_umac4_chconfig30__chconfig3__txpreamble_wr(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t  fld64, bool hw);
bf_status_t bf_ll_umac4_chconfig30__chconfig3__txpreamble_rmw(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t  fld64);
bf_status_t bf_ll_umac4_chconfig30__chconfig3__txdrainonfault_rd(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t *fld64, bool hw);
bf_status_t bf_ll_umac4_chconfig30__chconfig3__txdrainonfault_wr(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t  fld64, bool hw);
bf_status_t bf_ll_umac4_chconfig30__chconfig3__txdrainonfault_rmw(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t  fld64);
bf_status_t bf_ll_umac4_chconfig30__chconfig3__rxpreamble_rd(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t *fld64, bool hw);
bf_status_t bf_ll_umac4_chconfig30__chconfig3__rxpreamble_wr(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t  fld64, bool hw);
bf_status_t bf_ll_umac4_chconfig30__chconfig3__rxpreamble_rmw(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t  fld64);
bf_status_t bf_ll_umac4_chconfig30__chconfig3__rxerrmask_rd(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t *fld64, bool hw);
bf_status_t bf_ll_umac4_chconfig30__chconfig3__rxerrmask_wr(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t  fld64, bool hw);
bf_status_t bf_ll_umac4_chconfig30__chconfig3__rxerrmask_rmw(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t  fld64);
bf_status_t bf_ll_umac4_chconfig40__chconfig4__macaddr_rd(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t *fld64, bool hw);
bf_status_t bf_ll_umac4_chconfig40__chconfig4__macaddr_wr(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t  fld64, bool hw);
bf_status_t bf_ll_umac4_chconfig40__chconfig4__macaddr_rmw(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t  fld64);
bf_status_t bf_ll_umac4_chconfig40__chconfig4__pauseontime_rd(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t *fld64, bool hw);
bf_status_t bf_ll_umac4_chconfig40__chconfig4__pauseontime_wr(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t  fld64, bool hw);
bf_status_t bf_ll_umac4_chconfig40__chconfig4__pauseontime_rmw(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t  fld64);
bf_status_t bf_ll_umac4_chconfig50__chconfig5__pausedest_rd(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t *fld64, bool hw);
bf_status_t bf_ll_umac4_chconfig50__chconfig5__pausedest_wr(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t  fld64, bool hw);
bf_status_t bf_ll_umac4_chconfig50__chconfig5__pausedest_rmw(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t  fld64);
bf_status_t bf_ll_umac4_chconfig50__chconfig5__pauserefresh_rd(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t *fld64, bool hw);
bf_status_t bf_ll_umac4_chconfig50__chconfig5__pauserefresh_wr(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t  fld64, bool hw);
bf_status_t bf_ll_umac4_chconfig50__chconfig5__pauserefresh_rmw(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t  fld64);
bf_status_t bf_ll_umac4_chconfig310__chconfig31__macoverride_rd(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t *fld64, bool hw);
bf_status_t bf_ll_umac4_chconfig310__chconfig31__macoverride_wr(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t  fld64, bool hw);
bf_status_t bf_ll_umac4_chconfig310__chconfig31__macoverride_rmw(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t  fld64);
bf_status_t bf_ll_umac4_chsts0__chsts__txclkpresentall_rd(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t *fld64, bool hw);
bf_status_t bf_ll_umac4_chsts0__chsts__rxclkpresentall_rd(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t *fld64, bool hw);
bf_status_t bf_ll_umac4_chsts0__chsts__rxsigokall_rd(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t *fld64, bool hw);
bf_status_t bf_ll_umac4_chsts0__chsts__blocklockall_rd(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t *fld64, bool hw);
bf_status_t bf_ll_umac4_chsts0__chsts__amlockall_rd(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t *fld64, bool hw);
bf_status_t bf_ll_umac4_chsts0__chsts__aligned_rd(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t *fld64, bool hw);
bf_status_t bf_ll_umac4_chsts0__chsts__nohiber_rd(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t *fld64, bool hw);
bf_status_t bf_ll_umac4_chsts0__chsts__nolocalfault_rd(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t *fld64, bool hw);
bf_status_t bf_ll_umac4_chsts0__chsts__noremotefault_rd(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t *fld64, bool hw);
bf_status_t bf_ll_umac4_chsts0__chsts__linkup_rd(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t *fld64, bool hw);
bf_status_t bf_ll_umac4_chsts0__chsts__hiser_rd(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t *fld64, bool hw);
bf_status_t bf_ll_umac4_chsts0__chsts__fecdegser_rd(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t *fld64, bool hw);
bf_status_t bf_ll_umac4_chsts0__chsts__rxamsf_rd(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t *fld64, bool hw);
bf_status_t bf_ll_umac4_chconfig80__chconfig8__vlantag1_rd(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t *fld64, bool hw);
bf_status_t bf_ll_umac4_chconfig80__chconfig8__vlantag1_wr(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t  fld64, bool hw);
bf_status_t bf_ll_umac4_chconfig80__chconfig8__vlantag1_rmw(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t  fld64);
bf_status_t bf_ll_umac4_chconfig80__chconfig8__vlantag2_rd(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t *fld64, bool hw);
bf_status_t bf_ll_umac4_chconfig80__chconfig8__vlantag2_wr(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t  fld64, bool hw);
bf_status_t bf_ll_umac4_chconfig80__chconfig8__vlantag2_rmw(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t  fld64);
bf_status_t bf_ll_umac4_chconfig80__chconfig8__vlantag3_rd(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t *fld64, bool hw);
bf_status_t bf_ll_umac4_chconfig80__chconfig8__vlantag3_wr(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t  fld64, bool hw);
bf_status_t bf_ll_umac4_chconfig80__chconfig8__vlantag3_rmw(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t  fld64);
bf_status_t bf_ll_umac4_chconfig80__chconfig8__maxvlancnt_rd(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t *fld64, bool hw);
bf_status_t bf_ll_umac4_chconfig80__chconfig8__maxvlancnt_wr(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t  fld64, bool hw);
bf_status_t bf_ll_umac4_chconfig80__chconfig8__maxvlancnt_rmw(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t  fld64);
bf_status_t bf_ll_umac4_chconfig80__chconfig8__usclkcnt_rd(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t *fld64, bool hw);
bf_status_t bf_ll_umac4_chconfig80__chconfig8__usclkcnt_wr(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t  fld64, bool hw);
bf_status_t bf_ll_umac4_chconfig80__chconfig8__usclkcnt_rmw(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t  fld64);
bf_status_t bf_ll_umac4_appCfg0__appCfg0__afulltxinv_rd(bf_dev_id_t dev_id, uint32_t logical_umac, uint64_t *reg64, uint64_t *fld64, bool hw);
bf_status_t bf_ll_umac4_appCfg0__appCfg0__afulltxinv_wr(bf_dev_id_t dev_id, uint32_t logical_umac, uint64_t *reg64, uint64_t  fld64, bool hw);
bf_status_t bf_ll_umac4_appCfg0__appCfg0__afulltxinv_rmw(bf_dev_id_t dev_id, uint32_t logical_umac, uint64_t *reg64, uint64_t  fld64);
bf_status_t bf_ll_umac4_appCfg0__appCfg0__afullrxinv_rd(bf_dev_id_t dev_id, uint32_t logical_umac, uint64_t *reg64, uint64_t *fld64, bool hw);
bf_status_t bf_ll_umac4_appCfg0__appCfg0__afullrxinv_wr(bf_dev_id_t dev_id, uint32_t logical_umac, uint64_t *reg64, uint64_t  fld64, bool hw);
bf_status_t bf_ll_umac4_appCfg0__appCfg0__afullrxinv_rmw(bf_dev_id_t dev_id, uint32_t logical_umac, uint64_t *reg64, uint64_t  fld64);
bf_status_t bf_ll_umac4_appCfg0__appCfg0__bitend_rd(bf_dev_id_t dev_id, uint32_t logical_umac, uint64_t *reg64, uint64_t *fld64, bool hw);
bf_status_t bf_ll_umac4_appCfg0__appCfg0__bitend_wr(bf_dev_id_t dev_id, uint32_t logical_umac, uint64_t *reg64, uint64_t  fld64, bool hw);
bf_status_t bf_ll_umac4_appCfg0__appCfg0__bitend_rmw(bf_dev_id_t dev_id, uint32_t logical_umac, uint64_t *reg64, uint64_t  fld64);
bf_status_t bf_ll_umac4_appCfg0__appCfg0__bytend_rd(bf_dev_id_t dev_id, uint32_t logical_umac, uint64_t *reg64, uint64_t *fld64, bool hw);
bf_status_t bf_ll_umac4_appCfg0__appCfg0__bytend_wr(bf_dev_id_t dev_id, uint32_t logical_umac, uint64_t *reg64, uint64_t  fld64, bool hw);
bf_status_t bf_ll_umac4_appCfg0__appCfg0__bytend_rmw(bf_dev_id_t dev_id, uint32_t logical_umac, uint64_t *reg64, uint64_t  fld64);
bf_status_t bf_ll_umac4_appCfg0__appCfg0__statscor_rd(bf_dev_id_t dev_id, uint32_t logical_umac, uint64_t *reg64, uint64_t *fld64, bool hw);
bf_status_t bf_ll_umac4_appCfg0__appCfg0__statscor_wr(bf_dev_id_t dev_id, uint32_t logical_umac, uint64_t *reg64, uint64_t  fld64, bool hw);
bf_status_t bf_ll_umac4_appCfg0__appCfg0__statscor_rmw(bf_dev_id_t dev_id, uint32_t logical_umac, uint64_t *reg64, uint64_t  fld64);
bf_status_t bf_ll_umac4_test00__test0__txpltesten_rd(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t *fld64, bool hw);
bf_status_t bf_ll_umac4_test00__test0__txpltesten_wr(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t  fld64, bool hw);
bf_status_t bf_ll_umac4_test00__test0__txpltesten_rmw(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t  fld64);
bf_status_t bf_ll_umac4_test00__test0__txp0testen_rd(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t *fld64, bool hw);
bf_status_t bf_ll_umac4_test00__test0__txp0testen_wr(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t  fld64, bool hw);
bf_status_t bf_ll_umac4_test00__test0__txp0testen_rmw(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t  fld64);
bf_status_t bf_ll_umac4_test00__test0__txsitesten_rd(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t *fld64, bool hw);
bf_status_t bf_ll_umac4_test00__test0__txsitesten_wr(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t  fld64, bool hw);
bf_status_t bf_ll_umac4_test00__test0__txsitesten_rmw(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t  fld64);
bf_status_t bf_ll_umac4_test00__test0__txswtesten_rd(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t *fld64, bool hw);
bf_status_t bf_ll_umac4_test00__test0__txswtesten_wr(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t  fld64, bool hw);
bf_status_t bf_ll_umac4_test00__test0__txswtesten_rmw(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t  fld64);
bf_status_t bf_ll_umac4_test00__test0__rxpltesten_rd(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t *fld64, bool hw);
bf_status_t bf_ll_umac4_test00__test0__rxpltesten_wr(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t  fld64, bool hw);
bf_status_t bf_ll_umac4_test00__test0__rxpltesten_rmw(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t  fld64);
bf_status_t bf_ll_umac4_test00__test0__rxp0testen_rd(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t *fld64, bool hw);
bf_status_t bf_ll_umac4_test00__test0__rxp0testen_wr(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t  fld64, bool hw);
bf_status_t bf_ll_umac4_test00__test0__rxp0testen_rmw(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t  fld64);
bf_status_t bf_ll_umac4_test00__test0__rxsitesten_rd(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t *fld64, bool hw);
bf_status_t bf_ll_umac4_test00__test0__rxsitesten_wr(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t  fld64, bool hw);
bf_status_t bf_ll_umac4_test00__test0__rxsitesten_rmw(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t  fld64);
bf_status_t bf_ll_umac4_test1__test1__seeda_rd(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t *fld64, bool hw);
bf_status_t bf_ll_umac4_test1__test1__seeda_wr(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t  fld64, bool hw);
bf_status_t bf_ll_umac4_test1__test1__seeda_rmw(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t  fld64);
bf_status_t bf_ll_umac4_test2__test2__seedb_rd(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t *fld64, bool hw);
bf_status_t bf_ll_umac4_test2__test2__seedb_wr(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t  fld64, bool hw);
bf_status_t bf_ll_umac4_test2__test2__seedb_rmw(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t  fld64);
bf_status_t bf_ll_umac4_sdcfg0__sdcfg__serdeslpbk_rd(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t serdes_lane, uint64_t *reg64, uint64_t *fld64, bool hw);
bf_status_t bf_ll_umac4_sdcfg0__sdcfg__serdeslpbk_wr(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t serdes_lane, uint64_t *reg64, uint64_t  fld64, bool hw);
bf_status_t bf_ll_umac4_sdcfg0__sdcfg__serdeslpbk_rmw(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t serdes_lane, uint64_t *reg64, uint64_t  fld64);
bf_status_t bf_ll_umac4_sdcfg0__sdcfg__txremap_rd(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t serdes_lane, uint64_t *reg64, uint64_t *fld64, bool hw);
bf_status_t bf_ll_umac4_sdcfg0__sdcfg__txremap_wr(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t serdes_lane, uint64_t *reg64, uint64_t  fld64, bool hw);
bf_status_t bf_ll_umac4_sdcfg0__sdcfg__txremap_rmw(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t serdes_lane, uint64_t *reg64, uint64_t  fld64);
bf_status_t bf_ll_umac4_sdcfg0__sdcfg__sigokoverride_rd(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t serdes_lane, uint64_t *reg64, uint64_t *fld64, bool hw);
bf_status_t bf_ll_umac4_sdcfg0__sdcfg__sigokoverride_wr(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t serdes_lane, uint64_t *reg64, uint64_t  fld64, bool hw);
bf_status_t bf_ll_umac4_sdcfg0__sdcfg__sigokoverride_rmw(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t serdes_lane, uint64_t *reg64, uint64_t  fld64);
bf_status_t bf_ll_umac4_sdcfg0__sdcfg__rxremap_rd(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t serdes_lane, uint64_t *reg64, uint64_t *fld64, bool hw);
bf_status_t bf_ll_umac4_sdcfg0__sdcfg__rxremap_wr(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t serdes_lane, uint64_t *reg64, uint64_t  fld64, bool hw);
bf_status_t bf_ll_umac4_sdcfg0__sdcfg__rxremap_rmw(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t serdes_lane, uint64_t *reg64, uint64_t  fld64);
bf_status_t bf_ll_umac4_sdcfg0__sdcfg__txinv_rd(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t serdes_lane, uint64_t *reg64, uint64_t *fld64, bool hw);
bf_status_t bf_ll_umac4_sdcfg0__sdcfg__txinv_wr(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t serdes_lane, uint64_t *reg64, uint64_t  fld64, bool hw);
bf_status_t bf_ll_umac4_sdcfg0__sdcfg__txinv_rmw(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t serdes_lane, uint64_t *reg64, uint64_t  fld64);
bf_status_t bf_ll_umac4_sdcfg0__sdcfg__rxinv_rd(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t serdes_lane, uint64_t *reg64, uint64_t *fld64, bool hw);
bf_status_t bf_ll_umac4_sdcfg0__sdcfg__rxinv_wr(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t serdes_lane, uint64_t *reg64, uint64_t  fld64, bool hw);
bf_status_t bf_ll_umac4_sdcfg0__sdcfg__rxinv_rmw(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t serdes_lane, uint64_t *reg64, uint64_t  fld64);
bf_status_t bf_ll_umac4_sdcfg0__sdcfg__paceren_rd(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t serdes_lane, uint64_t *reg64, uint64_t *fld64, bool hw);
bf_status_t bf_ll_umac4_sdcfg0__sdcfg__paceren_wr(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t serdes_lane, uint64_t *reg64, uint64_t  fld64, bool hw);
bf_status_t bf_ll_umac4_sdcfg0__sdcfg__paceren_rmw(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t serdes_lane, uint64_t *reg64, uint64_t  fld64);
bf_status_t bf_ll_umac4_sdcfg0__sdcfg__pacerdiv_rd(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t serdes_lane, uint64_t *reg64, uint64_t *fld64, bool hw);
bf_status_t bf_ll_umac4_sdcfg0__sdcfg__pacerdiv_wr(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t serdes_lane, uint64_t *reg64, uint64_t  fld64, bool hw);
bf_status_t bf_ll_umac4_sdcfg0__sdcfg__pacerdiv_rmw(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t serdes_lane, uint64_t *reg64, uint64_t  fld64);
bf_status_t bf_ll_umac4_sdcfg0__sdcfg__txprbssel_rd(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t serdes_lane, uint64_t *reg64, uint64_t *fld64, bool hw);
bf_status_t bf_ll_umac4_sdcfg0__sdcfg__txprbssel_wr(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t serdes_lane, uint64_t *reg64, uint64_t  fld64, bool hw);
bf_status_t bf_ll_umac4_sdcfg0__sdcfg__txprbssel_rmw(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t serdes_lane, uint64_t *reg64, uint64_t  fld64);
bf_status_t bf_ll_umac4_sdcfg0__sdcfg__rxprbssel_rd(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t serdes_lane, uint64_t *reg64, uint64_t *fld64, bool hw);
bf_status_t bf_ll_umac4_sdcfg0__sdcfg__rxprbssel_wr(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t serdes_lane, uint64_t *reg64, uint64_t  fld64, bool hw);
bf_status_t bf_ll_umac4_sdcfg0__sdcfg__rxprbssel_rmw(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t serdes_lane, uint64_t *reg64, uint64_t  fld64);
bf_status_t bf_ll_umac4_sderrcfg0__sderrcfg__txerrperiod_rd(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t serdes_lane, uint64_t *reg64, uint64_t *fld64, bool hw);
bf_status_t bf_ll_umac4_sderrcfg0__sderrcfg__txerrperiod_wr(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t serdes_lane, uint64_t *reg64, uint64_t  fld64, bool hw);
bf_status_t bf_ll_umac4_sderrcfg0__sderrcfg__txerrperiod_rmw(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t serdes_lane, uint64_t *reg64, uint64_t  fld64);
bf_status_t bf_ll_umac4_sderrcfg0__sderrcfg__txerrburst_rd(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t serdes_lane, uint64_t *reg64, uint64_t *fld64, bool hw);
bf_status_t bf_ll_umac4_sderrcfg0__sderrcfg__txerrburst_wr(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t serdes_lane, uint64_t *reg64, uint64_t  fld64, bool hw);
bf_status_t bf_ll_umac4_sderrcfg0__sderrcfg__txerrburst_rmw(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t serdes_lane, uint64_t *reg64, uint64_t  fld64);
bf_status_t bf_ll_umac4_sdsts0__sdsts__txclkpresent_rd(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t serdes_lane, uint64_t *reg64, uint64_t *fld64, bool hw);
bf_status_t bf_ll_umac4_sdsts0__sdsts__txclkrate_rd(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t serdes_lane, uint64_t *reg64, uint64_t *fld64, bool hw);
bf_status_t bf_ll_umac4_sdsts0__sdsts__rxclkpresent_rd(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t serdes_lane, uint64_t *reg64, uint64_t *fld64, bool hw);
bf_status_t bf_ll_umac4_sdsts0__sdsts__rxclkrate_rd(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t serdes_lane, uint64_t *reg64, uint64_t *fld64, bool hw);
bf_status_t bf_ll_umac4_sdsts0__sdsts__sigok_rd(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t serdes_lane, uint64_t *reg64, uint64_t *fld64, bool hw);
bf_status_t bf_ll_umac4_sdsts0__sdsts__rxprbserrcnt_rd(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t serdes_lane, uint64_t *reg64, uint64_t *fld64, bool hw);
bf_status_t bf_ll_umac4_sdsts0__sdsts__rxprbserrcnt_wr(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t serdes_lane, uint64_t *reg64, uint64_t  fld64, bool hw);
bf_status_t bf_ll_umac4_sdsts0__sdsts__rxprbserrcnt_rmw(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t serdes_lane, uint64_t *reg64, uint64_t  fld64);
bf_status_t bf_ll_umac4_progam0__progam__am_rd(bf_dev_id_t dev_id, uint32_t logical_umac, uint64_t *reg64, uint64_t *fld64, bool hw);
bf_status_t bf_ll_umac4_progam0__progam__am_wr(bf_dev_id_t dev_id, uint32_t logical_umac, uint64_t *reg64, uint64_t  fld64, bool hw);
bf_status_t bf_ll_umac4_progam0__progam__am_rmw(bf_dev_id_t dev_id, uint32_t logical_umac, uint64_t *reg64, uint64_t  fld64);
bf_status_t bf_ll_umac4_progam0__progam__bip_rd(bf_dev_id_t dev_id, uint32_t logical_umac, uint64_t *reg64, uint64_t *fld64, bool hw);
bf_status_t bf_ll_umac4_progam0__progam__bip_wr(bf_dev_id_t dev_id, uint32_t logical_umac, uint64_t *reg64, uint64_t  fld64, bool hw);
bf_status_t bf_ll_umac4_progam0__progam__bip_rmw(bf_dev_id_t dev_id, uint32_t logical_umac, uint64_t *reg64, uint64_t  fld64);
bf_status_t bf_ll_umac4_progam1__progam__am_rd(bf_dev_id_t dev_id, uint32_t logical_umac, uint64_t *reg64, uint64_t *fld64, bool hw);
bf_status_t bf_ll_umac4_progam1__progam__am_wr(bf_dev_id_t dev_id, uint32_t logical_umac, uint64_t *reg64, uint64_t  fld64, bool hw);
bf_status_t bf_ll_umac4_progam1__progam__am_rmw(bf_dev_id_t dev_id, uint32_t logical_umac, uint64_t *reg64, uint64_t  fld64);
bf_status_t bf_ll_umac4_progam1__progam__bip_rd(bf_dev_id_t dev_id, uint32_t logical_umac, uint64_t *reg64, uint64_t *fld64, bool hw);
bf_status_t bf_ll_umac4_progam1__progam__bip_wr(bf_dev_id_t dev_id, uint32_t logical_umac, uint64_t *reg64, uint64_t  fld64, bool hw);
bf_status_t bf_ll_umac4_progam1__progam__bip_rmw(bf_dev_id_t dev_id, uint32_t logical_umac, uint64_t *reg64, uint64_t  fld64);
bf_status_t bf_ll_umac4_progam2__progam__am_rd(bf_dev_id_t dev_id, uint32_t logical_umac, uint64_t *reg64, uint64_t *fld64, bool hw);
bf_status_t bf_ll_umac4_progam2__progam__am_wr(bf_dev_id_t dev_id, uint32_t logical_umac, uint64_t *reg64, uint64_t  fld64, bool hw);
bf_status_t bf_ll_umac4_progam2__progam__am_rmw(bf_dev_id_t dev_id, uint32_t logical_umac, uint64_t *reg64, uint64_t  fld64);
bf_status_t bf_ll_umac4_progam2__progam__bip_rd(bf_dev_id_t dev_id, uint32_t logical_umac, uint64_t *reg64, uint64_t *fld64, bool hw);
bf_status_t bf_ll_umac4_progam2__progam__bip_wr(bf_dev_id_t dev_id, uint32_t logical_umac, uint64_t *reg64, uint64_t  fld64, bool hw);
bf_status_t bf_ll_umac4_progam2__progam__bip_rmw(bf_dev_id_t dev_id, uint32_t logical_umac, uint64_t *reg64, uint64_t  fld64);
bf_status_t bf_ll_umac4_progam3__progam__am_rd(bf_dev_id_t dev_id, uint32_t logical_umac, uint64_t *reg64, uint64_t *fld64, bool hw);
bf_status_t bf_ll_umac4_progam3__progam__am_wr(bf_dev_id_t dev_id, uint32_t logical_umac, uint64_t *reg64, uint64_t  fld64, bool hw);
bf_status_t bf_ll_umac4_progam3__progam__am_rmw(bf_dev_id_t dev_id, uint32_t logical_umac, uint64_t *reg64, uint64_t  fld64);
bf_status_t bf_ll_umac4_progam3__progam__bip_rd(bf_dev_id_t dev_id, uint32_t logical_umac, uint64_t *reg64, uint64_t *fld64, bool hw);
bf_status_t bf_ll_umac4_progam3__progam__bip_wr(bf_dev_id_t dev_id, uint32_t logical_umac, uint64_t *reg64, uint64_t  fld64, bool hw);
bf_status_t bf_ll_umac4_progam3__progam__bip_rmw(bf_dev_id_t dev_id, uint32_t logical_umac, uint64_t *reg64, uint64_t  fld64);
bf_status_t bf_ll_umac4_progam4__progam__am_rd(bf_dev_id_t dev_id, uint32_t logical_umac, uint64_t *reg64, uint64_t *fld64, bool hw);
bf_status_t bf_ll_umac4_progam4__progam__am_wr(bf_dev_id_t dev_id, uint32_t logical_umac, uint64_t *reg64, uint64_t  fld64, bool hw);
bf_status_t bf_ll_umac4_progam4__progam__am_rmw(bf_dev_id_t dev_id, uint32_t logical_umac, uint64_t *reg64, uint64_t  fld64);
bf_status_t bf_ll_umac4_progam4__progam__bip_rd(bf_dev_id_t dev_id, uint32_t logical_umac, uint64_t *reg64, uint64_t *fld64, bool hw);
bf_status_t bf_ll_umac4_progam4__progam__bip_wr(bf_dev_id_t dev_id, uint32_t logical_umac, uint64_t *reg64, uint64_t  fld64, bool hw);
bf_status_t bf_ll_umac4_progam4__progam__bip_rmw(bf_dev_id_t dev_id, uint32_t logical_umac, uint64_t *reg64, uint64_t  fld64);
bf_status_t bf_ll_umac4_progam5__progam__am_rd(bf_dev_id_t dev_id, uint32_t logical_umac, uint64_t *reg64, uint64_t *fld64, bool hw);
bf_status_t bf_ll_umac4_progam5__progam__am_wr(bf_dev_id_t dev_id, uint32_t logical_umac, uint64_t *reg64, uint64_t  fld64, bool hw);
bf_status_t bf_ll_umac4_progam5__progam__am_rmw(bf_dev_id_t dev_id, uint32_t logical_umac, uint64_t *reg64, uint64_t  fld64);
bf_status_t bf_ll_umac4_progam5__progam__bip_rd(bf_dev_id_t dev_id, uint32_t logical_umac, uint64_t *reg64, uint64_t *fld64, bool hw);
bf_status_t bf_ll_umac4_progam5__progam__bip_wr(bf_dev_id_t dev_id, uint32_t logical_umac, uint64_t *reg64, uint64_t  fld64, bool hw);
bf_status_t bf_ll_umac4_progam5__progam__bip_rmw(bf_dev_id_t dev_id, uint32_t logical_umac, uint64_t *reg64, uint64_t  fld64);
bf_status_t bf_ll_umac4_progam6__progam__am_rd(bf_dev_id_t dev_id, uint32_t logical_umac, uint64_t *reg64, uint64_t *fld64, bool hw);
bf_status_t bf_ll_umac4_progam6__progam__am_wr(bf_dev_id_t dev_id, uint32_t logical_umac, uint64_t *reg64, uint64_t  fld64, bool hw);
bf_status_t bf_ll_umac4_progam6__progam__am_rmw(bf_dev_id_t dev_id, uint32_t logical_umac, uint64_t *reg64, uint64_t  fld64);
bf_status_t bf_ll_umac4_progam6__progam__bip_rd(bf_dev_id_t dev_id, uint32_t logical_umac, uint64_t *reg64, uint64_t *fld64, bool hw);
bf_status_t bf_ll_umac4_progam6__progam__bip_wr(bf_dev_id_t dev_id, uint32_t logical_umac, uint64_t *reg64, uint64_t  fld64, bool hw);
bf_status_t bf_ll_umac4_progam6__progam__bip_rmw(bf_dev_id_t dev_id, uint32_t logical_umac, uint64_t *reg64, uint64_t  fld64);
bf_status_t bf_ll_umac4_progam7__progam__am_rd(bf_dev_id_t dev_id, uint32_t logical_umac, uint64_t *reg64, uint64_t *fld64, bool hw);
bf_status_t bf_ll_umac4_progam7__progam__am_wr(bf_dev_id_t dev_id, uint32_t logical_umac, uint64_t *reg64, uint64_t  fld64, bool hw);
bf_status_t bf_ll_umac4_progam7__progam__am_rmw(bf_dev_id_t dev_id, uint32_t logical_umac, uint64_t *reg64, uint64_t  fld64);
bf_status_t bf_ll_umac4_progam7__progam__bip_rd(bf_dev_id_t dev_id, uint32_t logical_umac, uint64_t *reg64, uint64_t *fld64, bool hw);
bf_status_t bf_ll_umac4_progam7__progam__bip_wr(bf_dev_id_t dev_id, uint32_t logical_umac, uint64_t *reg64, uint64_t  fld64, bool hw);
bf_status_t bf_ll_umac4_progam7__progam__bip_rmw(bf_dev_id_t dev_id, uint32_t logical_umac, uint64_t *reg64, uint64_t  fld64);
bf_status_t bf_ll_umac4_progam8__progam__am_rd(bf_dev_id_t dev_id, uint32_t logical_umac, uint64_t *reg64, uint64_t *fld64, bool hw);
bf_status_t bf_ll_umac4_progam8__progam__am_wr(bf_dev_id_t dev_id, uint32_t logical_umac, uint64_t *reg64, uint64_t  fld64, bool hw);
bf_status_t bf_ll_umac4_progam8__progam__am_rmw(bf_dev_id_t dev_id, uint32_t logical_umac, uint64_t *reg64, uint64_t  fld64);
bf_status_t bf_ll_umac4_progam8__progam__bip_rd(bf_dev_id_t dev_id, uint32_t logical_umac, uint64_t *reg64, uint64_t *fld64, bool hw);
bf_status_t bf_ll_umac4_progam8__progam__bip_wr(bf_dev_id_t dev_id, uint32_t logical_umac, uint64_t *reg64, uint64_t  fld64, bool hw);
bf_status_t bf_ll_umac4_progam8__progam__bip_rmw(bf_dev_id_t dev_id, uint32_t logical_umac, uint64_t *reg64, uint64_t  fld64);
bf_status_t bf_ll_umac4_progam9__progam__am_rd(bf_dev_id_t dev_id, uint32_t logical_umac, uint64_t *reg64, uint64_t *fld64, bool hw);
bf_status_t bf_ll_umac4_progam9__progam__am_wr(bf_dev_id_t dev_id, uint32_t logical_umac, uint64_t *reg64, uint64_t  fld64, bool hw);
bf_status_t bf_ll_umac4_progam9__progam__am_rmw(bf_dev_id_t dev_id, uint32_t logical_umac, uint64_t *reg64, uint64_t  fld64);
bf_status_t bf_ll_umac4_progam9__progam__bip_rd(bf_dev_id_t dev_id, uint32_t logical_umac, uint64_t *reg64, uint64_t *fld64, bool hw);
bf_status_t bf_ll_umac4_progam9__progam__bip_wr(bf_dev_id_t dev_id, uint32_t logical_umac, uint64_t *reg64, uint64_t  fld64, bool hw);
bf_status_t bf_ll_umac4_progam9__progam__bip_rmw(bf_dev_id_t dev_id, uint32_t logical_umac, uint64_t *reg64, uint64_t  fld64);
bf_status_t bf_ll_umac4_progamA__progam__am_rd(bf_dev_id_t dev_id, uint32_t logical_umac, uint64_t *reg64, uint64_t *fld64, bool hw);
bf_status_t bf_ll_umac4_progamA__progam__am_wr(bf_dev_id_t dev_id, uint32_t logical_umac, uint64_t *reg64, uint64_t  fld64, bool hw);
bf_status_t bf_ll_umac4_progamA__progam__am_rmw(bf_dev_id_t dev_id, uint32_t logical_umac, uint64_t *reg64, uint64_t  fld64);
bf_status_t bf_ll_umac4_progamA__progam__bip_rd(bf_dev_id_t dev_id, uint32_t logical_umac, uint64_t *reg64, uint64_t *fld64, bool hw);
bf_status_t bf_ll_umac4_progamA__progam__bip_wr(bf_dev_id_t dev_id, uint32_t logical_umac, uint64_t *reg64, uint64_t  fld64, bool hw);
bf_status_t bf_ll_umac4_progamA__progam__bip_rmw(bf_dev_id_t dev_id, uint32_t logical_umac, uint64_t *reg64, uint64_t  fld64);
bf_status_t bf_ll_umac4_progamB__progam__am_rd(bf_dev_id_t dev_id, uint32_t logical_umac, uint64_t *reg64, uint64_t *fld64, bool hw);
bf_status_t bf_ll_umac4_progamB__progam__am_wr(bf_dev_id_t dev_id, uint32_t logical_umac, uint64_t *reg64, uint64_t  fld64, bool hw);
bf_status_t bf_ll_umac4_progamB__progam__am_rmw(bf_dev_id_t dev_id, uint32_t logical_umac, uint64_t *reg64, uint64_t  fld64);
bf_status_t bf_ll_umac4_progamB__progam__bip_rd(bf_dev_id_t dev_id, uint32_t logical_umac, uint64_t *reg64, uint64_t *fld64, bool hw);
bf_status_t bf_ll_umac4_progamB__progam__bip_wr(bf_dev_id_t dev_id, uint32_t logical_umac, uint64_t *reg64, uint64_t  fld64, bool hw);
bf_status_t bf_ll_umac4_progamB__progam__bip_rmw(bf_dev_id_t dev_id, uint32_t logical_umac, uint64_t *reg64, uint64_t  fld64);
bf_status_t bf_ll_umac4_progamC__progam__am_rd(bf_dev_id_t dev_id, uint32_t logical_umac, uint64_t *reg64, uint64_t *fld64, bool hw);
bf_status_t bf_ll_umac4_progamC__progam__am_wr(bf_dev_id_t dev_id, uint32_t logical_umac, uint64_t *reg64, uint64_t  fld64, bool hw);
bf_status_t bf_ll_umac4_progamC__progam__am_rmw(bf_dev_id_t dev_id, uint32_t logical_umac, uint64_t *reg64, uint64_t  fld64);
bf_status_t bf_ll_umac4_progamC__progam__bip_rd(bf_dev_id_t dev_id, uint32_t logical_umac, uint64_t *reg64, uint64_t *fld64, bool hw);
bf_status_t bf_ll_umac4_progamC__progam__bip_wr(bf_dev_id_t dev_id, uint32_t logical_umac, uint64_t *reg64, uint64_t  fld64, bool hw);
bf_status_t bf_ll_umac4_progamC__progam__bip_rmw(bf_dev_id_t dev_id, uint32_t logical_umac, uint64_t *reg64, uint64_t  fld64);
bf_status_t bf_ll_umac4_progamD__progam__am_rd(bf_dev_id_t dev_id, uint32_t logical_umac, uint64_t *reg64, uint64_t *fld64, bool hw);
bf_status_t bf_ll_umac4_progamD__progam__am_wr(bf_dev_id_t dev_id, uint32_t logical_umac, uint64_t *reg64, uint64_t  fld64, bool hw);
bf_status_t bf_ll_umac4_progamD__progam__am_rmw(bf_dev_id_t dev_id, uint32_t logical_umac, uint64_t *reg64, uint64_t  fld64);
bf_status_t bf_ll_umac4_progamD__progam__bip_rd(bf_dev_id_t dev_id, uint32_t logical_umac, uint64_t *reg64, uint64_t *fld64, bool hw);
bf_status_t bf_ll_umac4_progamD__progam__bip_wr(bf_dev_id_t dev_id, uint32_t logical_umac, uint64_t *reg64, uint64_t  fld64, bool hw);
bf_status_t bf_ll_umac4_progamD__progam__bip_rmw(bf_dev_id_t dev_id, uint32_t logical_umac, uint64_t *reg64, uint64_t  fld64);
bf_status_t bf_ll_umac4_progamE__progam__am_rd(bf_dev_id_t dev_id, uint32_t logical_umac, uint64_t *reg64, uint64_t *fld64, bool hw);
bf_status_t bf_ll_umac4_progamE__progam__am_wr(bf_dev_id_t dev_id, uint32_t logical_umac, uint64_t *reg64, uint64_t  fld64, bool hw);
bf_status_t bf_ll_umac4_progamE__progam__am_rmw(bf_dev_id_t dev_id, uint32_t logical_umac, uint64_t *reg64, uint64_t  fld64);
bf_status_t bf_ll_umac4_progamE__progam__bip_rd(bf_dev_id_t dev_id, uint32_t logical_umac, uint64_t *reg64, uint64_t *fld64, bool hw);
bf_status_t bf_ll_umac4_progamE__progam__bip_wr(bf_dev_id_t dev_id, uint32_t logical_umac, uint64_t *reg64, uint64_t  fld64, bool hw);
bf_status_t bf_ll_umac4_progamE__progam__bip_rmw(bf_dev_id_t dev_id, uint32_t logical_umac, uint64_t *reg64, uint64_t  fld64);
bf_status_t bf_ll_umac4_progamF__progam__am_rd(bf_dev_id_t dev_id, uint32_t logical_umac, uint64_t *reg64, uint64_t *fld64, bool hw);
bf_status_t bf_ll_umac4_progamF__progam__am_wr(bf_dev_id_t dev_id, uint32_t logical_umac, uint64_t *reg64, uint64_t  fld64, bool hw);
bf_status_t bf_ll_umac4_progamF__progam__am_rmw(bf_dev_id_t dev_id, uint32_t logical_umac, uint64_t *reg64, uint64_t  fld64);
bf_status_t bf_ll_umac4_progamF__progam__bip_rd(bf_dev_id_t dev_id, uint32_t logical_umac, uint64_t *reg64, uint64_t *fld64, bool hw);
bf_status_t bf_ll_umac4_progamF__progam__bip_wr(bf_dev_id_t dev_id, uint32_t logical_umac, uint64_t *reg64, uint64_t  fld64, bool hw);
bf_status_t bf_ll_umac4_progamF__progam__bip_rmw(bf_dev_id_t dev_id, uint32_t logical_umac, uint64_t *reg64, uint64_t  fld64);
bf_status_t bf_ll_umac4_progam10__progam__am_rd(bf_dev_id_t dev_id, uint32_t logical_umac, uint64_t *reg64, uint64_t *fld64, bool hw);
bf_status_t bf_ll_umac4_progam10__progam__am_wr(bf_dev_id_t dev_id, uint32_t logical_umac, uint64_t *reg64, uint64_t  fld64, bool hw);
bf_status_t bf_ll_umac4_progam10__progam__am_rmw(bf_dev_id_t dev_id, uint32_t logical_umac, uint64_t *reg64, uint64_t  fld64);
bf_status_t bf_ll_umac4_progam10__progam__bip_rd(bf_dev_id_t dev_id, uint32_t logical_umac, uint64_t *reg64, uint64_t *fld64, bool hw);
bf_status_t bf_ll_umac4_progam10__progam__bip_wr(bf_dev_id_t dev_id, uint32_t logical_umac, uint64_t *reg64, uint64_t  fld64, bool hw);
bf_status_t bf_ll_umac4_progam10__progam__bip_rmw(bf_dev_id_t dev_id, uint32_t logical_umac, uint64_t *reg64, uint64_t  fld64);
bf_status_t bf_ll_umac4_progam11__progam__am_rd(bf_dev_id_t dev_id, uint32_t logical_umac, uint64_t *reg64, uint64_t *fld64, bool hw);
bf_status_t bf_ll_umac4_progam11__progam__am_wr(bf_dev_id_t dev_id, uint32_t logical_umac, uint64_t *reg64, uint64_t  fld64, bool hw);
bf_status_t bf_ll_umac4_progam11__progam__am_rmw(bf_dev_id_t dev_id, uint32_t logical_umac, uint64_t *reg64, uint64_t  fld64);
bf_status_t bf_ll_umac4_progam11__progam__bip_rd(bf_dev_id_t dev_id, uint32_t logical_umac, uint64_t *reg64, uint64_t *fld64, bool hw);
bf_status_t bf_ll_umac4_progam11__progam__bip_wr(bf_dev_id_t dev_id, uint32_t logical_umac, uint64_t *reg64, uint64_t  fld64, bool hw);
bf_status_t bf_ll_umac4_progam11__progam__bip_rmw(bf_dev_id_t dev_id, uint32_t logical_umac, uint64_t *reg64, uint64_t  fld64);
bf_status_t bf_ll_umac4_progam12__progam__am_rd(bf_dev_id_t dev_id, uint32_t logical_umac, uint64_t *reg64, uint64_t *fld64, bool hw);
bf_status_t bf_ll_umac4_progam12__progam__am_wr(bf_dev_id_t dev_id, uint32_t logical_umac, uint64_t *reg64, uint64_t  fld64, bool hw);
bf_status_t bf_ll_umac4_progam12__progam__am_rmw(bf_dev_id_t dev_id, uint32_t logical_umac, uint64_t *reg64, uint64_t  fld64);
bf_status_t bf_ll_umac4_progam12__progam__bip_rd(bf_dev_id_t dev_id, uint32_t logical_umac, uint64_t *reg64, uint64_t *fld64, bool hw);
bf_status_t bf_ll_umac4_progam12__progam__bip_wr(bf_dev_id_t dev_id, uint32_t logical_umac, uint64_t *reg64, uint64_t  fld64, bool hw);
bf_status_t bf_ll_umac4_progam12__progam__bip_rmw(bf_dev_id_t dev_id, uint32_t logical_umac, uint64_t *reg64, uint64_t  fld64);
bf_status_t bf_ll_umac4_progam13__progam__am_rd(bf_dev_id_t dev_id, uint32_t logical_umac, uint64_t *reg64, uint64_t *fld64, bool hw);
bf_status_t bf_ll_umac4_progam13__progam__am_wr(bf_dev_id_t dev_id, uint32_t logical_umac, uint64_t *reg64, uint64_t  fld64, bool hw);
bf_status_t bf_ll_umac4_progam13__progam__am_rmw(bf_dev_id_t dev_id, uint32_t logical_umac, uint64_t *reg64, uint64_t  fld64);
bf_status_t bf_ll_umac4_progam13__progam__bip_rd(bf_dev_id_t dev_id, uint32_t logical_umac, uint64_t *reg64, uint64_t *fld64, bool hw);
bf_status_t bf_ll_umac4_progam13__progam__bip_wr(bf_dev_id_t dev_id, uint32_t logical_umac, uint64_t *reg64, uint64_t  fld64, bool hw);
bf_status_t bf_ll_umac4_progam13__progam__bip_rmw(bf_dev_id_t dev_id, uint32_t logical_umac, uint64_t *reg64, uint64_t  fld64);
bf_status_t bf_ll_umac4_progam14__progam__bip_rd(bf_dev_id_t dev_id, uint32_t logical_umac, uint64_t *reg64, uint64_t *fld64, bool hw);
bf_status_t bf_ll_umac4_progam14__progam__bip_wr(bf_dev_id_t dev_id, uint32_t logical_umac, uint64_t *reg64, uint64_t  fld64, bool hw);
bf_status_t bf_ll_umac4_progam14__progam__bip_rmw(bf_dev_id_t dev_id, uint32_t logical_umac, uint64_t *reg64, uint64_t  fld64);
bf_status_t bf_ll_umac4_progam15__progam__bip_rd(bf_dev_id_t dev_id, uint32_t logical_umac, uint64_t *reg64, uint64_t *fld64, bool hw);
bf_status_t bf_ll_umac4_progam15__progam__bip_wr(bf_dev_id_t dev_id, uint32_t logical_umac, uint64_t *reg64, uint64_t  fld64, bool hw);
bf_status_t bf_ll_umac4_progam15__progam__bip_rmw(bf_dev_id_t dev_id, uint32_t logical_umac, uint64_t *reg64, uint64_t  fld64);
bf_status_t bf_ll_umac4_progam16__progam__bip_rd(bf_dev_id_t dev_id, uint32_t logical_umac, uint64_t *reg64, uint64_t *fld64, bool hw);
bf_status_t bf_ll_umac4_progam16__progam__bip_wr(bf_dev_id_t dev_id, uint32_t logical_umac, uint64_t *reg64, uint64_t  fld64, bool hw);
bf_status_t bf_ll_umac4_progam16__progam__bip_rmw(bf_dev_id_t dev_id, uint32_t logical_umac, uint64_t *reg64, uint64_t  fld64);
bf_status_t bf_ll_umac4_progam17__progam__bip_rd(bf_dev_id_t dev_id, uint32_t logical_umac, uint64_t *reg64, uint64_t *fld64, bool hw);
bf_status_t bf_ll_umac4_progam17__progam__bip_wr(bf_dev_id_t dev_id, uint32_t logical_umac, uint64_t *reg64, uint64_t  fld64, bool hw);
bf_status_t bf_ll_umac4_progam17__progam__bip_rmw(bf_dev_id_t dev_id, uint32_t logical_umac, uint64_t *reg64, uint64_t  fld64);
bf_status_t bf_ll_umac4_progam18__progam__bip_rd(bf_dev_id_t dev_id, uint32_t logical_umac, uint64_t *reg64, uint64_t *fld64, bool hw);
bf_status_t bf_ll_umac4_progam18__progam__bip_wr(bf_dev_id_t dev_id, uint32_t logical_umac, uint64_t *reg64, uint64_t  fld64, bool hw);
bf_status_t bf_ll_umac4_progam18__progam__bip_rmw(bf_dev_id_t dev_id, uint32_t logical_umac, uint64_t *reg64, uint64_t  fld64);
bf_status_t bf_ll_umac4_progam19__progam__bip_rd(bf_dev_id_t dev_id, uint32_t logical_umac, uint64_t *reg64, uint64_t *fld64, bool hw);
bf_status_t bf_ll_umac4_progam19__progam__bip_wr(bf_dev_id_t dev_id, uint32_t logical_umac, uint64_t *reg64, uint64_t  fld64, bool hw);
bf_status_t bf_ll_umac4_progam19__progam__bip_rmw(bf_dev_id_t dev_id, uint32_t logical_umac, uint64_t *reg64, uint64_t  fld64);
bf_status_t bf_ll_umac4_progam1A__progam__bip_rd(bf_dev_id_t dev_id, uint32_t logical_umac, uint64_t *reg64, uint64_t *fld64, bool hw);
bf_status_t bf_ll_umac4_progam1A__progam__bip_wr(bf_dev_id_t dev_id, uint32_t logical_umac, uint64_t *reg64, uint64_t  fld64, bool hw);
bf_status_t bf_ll_umac4_progam1A__progam__bip_rmw(bf_dev_id_t dev_id, uint32_t logical_umac, uint64_t *reg64, uint64_t  fld64);
bf_status_t bf_ll_umac4_progam1B__progam__bip_rd(bf_dev_id_t dev_id, uint32_t logical_umac, uint64_t *reg64, uint64_t *fld64, bool hw);
bf_status_t bf_ll_umac4_progam1B__progam__bip_wr(bf_dev_id_t dev_id, uint32_t logical_umac, uint64_t *reg64, uint64_t  fld64, bool hw);
bf_status_t bf_ll_umac4_progam1B__progam__bip_rmw(bf_dev_id_t dev_id, uint32_t logical_umac, uint64_t *reg64, uint64_t  fld64);
bf_status_t bf_ll_umac4_progam1C__progam__bip_rd(bf_dev_id_t dev_id, uint32_t logical_umac, uint64_t *reg64, uint64_t *fld64, bool hw);
bf_status_t bf_ll_umac4_progam1C__progam__bip_wr(bf_dev_id_t dev_id, uint32_t logical_umac, uint64_t *reg64, uint64_t  fld64, bool hw);
bf_status_t bf_ll_umac4_progam1C__progam__bip_rmw(bf_dev_id_t dev_id, uint32_t logical_umac, uint64_t *reg64, uint64_t  fld64);
bf_status_t bf_ll_umac4_progam1D__progam__bip_rd(bf_dev_id_t dev_id, uint32_t logical_umac, uint64_t *reg64, uint64_t *fld64, bool hw);
bf_status_t bf_ll_umac4_progam1D__progam__bip_wr(bf_dev_id_t dev_id, uint32_t logical_umac, uint64_t *reg64, uint64_t  fld64, bool hw);
bf_status_t bf_ll_umac4_progam1D__progam__bip_rmw(bf_dev_id_t dev_id, uint32_t logical_umac, uint64_t *reg64, uint64_t  fld64);
bf_status_t bf_ll_umac4_progam1E__progam__bip_rd(bf_dev_id_t dev_id, uint32_t logical_umac, uint64_t *reg64, uint64_t *fld64, bool hw);
bf_status_t bf_ll_umac4_progam1E__progam__bip_wr(bf_dev_id_t dev_id, uint32_t logical_umac, uint64_t *reg64, uint64_t  fld64, bool hw);
bf_status_t bf_ll_umac4_progam1E__progam__bip_rmw(bf_dev_id_t dev_id, uint32_t logical_umac, uint64_t *reg64, uint64_t  fld64);
bf_status_t bf_ll_umac4_progam1F__progam__bip_rd(bf_dev_id_t dev_id, uint32_t logical_umac, uint64_t *reg64, uint64_t *fld64, bool hw);
bf_status_t bf_ll_umac4_progam1F__progam__bip_wr(bf_dev_id_t dev_id, uint32_t logical_umac, uint64_t *reg64, uint64_t  fld64, bool hw);
bf_status_t bf_ll_umac4_progam1F__progam__bip_rmw(bf_dev_id_t dev_id, uint32_t logical_umac, uint64_t *reg64, uint64_t  fld64);
bf_status_t bf_ll_umac4_chconfig60__chconfig6__corrbyp_rd(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t *fld64, bool hw);
bf_status_t bf_ll_umac4_chconfig60__chconfig6__corrbyp_wr(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t  fld64, bool hw);
bf_status_t bf_ll_umac4_chconfig60__chconfig6__corrbyp_rmw(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t  fld64);
bf_status_t bf_ll_umac4_chconfig60__chconfig6__indibyp_rd(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t *fld64, bool hw);
bf_status_t bf_ll_umac4_chconfig60__chconfig6__indibyp_wr(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t  fld64, bool hw);
bf_status_t bf_ll_umac4_chconfig60__chconfig6__indibyp_rmw(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t  fld64);
bf_status_t bf_ll_umac4_chconfig60__chconfig6__hiserthresh_rd(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t *fld64, bool hw);
bf_status_t bf_ll_umac4_chconfig60__chconfig6__hiserthresh_wr(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t  fld64, bool hw);
bf_status_t bf_ll_umac4_chconfig60__chconfig6__hiserthresh_rmw(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t  fld64);
bf_status_t bf_ll_umac4_chconfig60__chconfig6__degserenable_rd(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t *fld64, bool hw);
bf_status_t bf_ll_umac4_chconfig60__chconfig6__degserenable_wr(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t  fld64, bool hw);
bf_status_t bf_ll_umac4_chconfig60__chconfig6__degserenable_rmw(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t  fld64);
bf_status_t bf_ll_umac4_chconfig60__chconfig6__degserinterval_rd(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t *fld64, bool hw);
bf_status_t bf_ll_umac4_chconfig60__chconfig6__degserinterval_wr(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t  fld64, bool hw);
bf_status_t bf_ll_umac4_chconfig60__chconfig6__degserinterval_rmw(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t  fld64);
bf_status_t bf_ll_umac4_chconfig70__chconfig7__degseractivatethresh_rd(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t *fld64, bool hw);
bf_status_t bf_ll_umac4_chconfig70__chconfig7__degseractivatethresh_wr(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t  fld64, bool hw);
bf_status_t bf_ll_umac4_chconfig70__chconfig7__degseractivatethresh_rmw(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t  fld64);
bf_status_t bf_ll_umac4_chconfig70__chconfig7__degserdeactivatethresh_rd(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t *fld64, bool hw);
bf_status_t bf_ll_umac4_chconfig70__chconfig7__degserdeactivatethresh_wr(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t  fld64, bool hw);
bf_status_t bf_ll_umac4_chconfig70__chconfig7__degserdeactivatethresh_rmw(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t  fld64);
bf_status_t bf_ll_umac4_pcsrxoverride00__pcsrxoverride0__rxoverride0_rd(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t *fld64, bool hw);
bf_status_t bf_ll_umac4_pcsrxoverride00__pcsrxoverride0__rxoverride0_wr(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t  fld64, bool hw);
bf_status_t bf_ll_umac4_pcsrxoverride00__pcsrxoverride0__rxoverride0_rmw(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t  fld64);
bf_status_t bf_ll_umac4_pcsrxoverride01__pcsrxoverride1__rxoverride1_rd(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t *fld64, bool hw);
bf_status_t bf_ll_umac4_pcsrxoverride01__pcsrxoverride1__rxoverride1_wr(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t  fld64, bool hw);
bf_status_t bf_ll_umac4_pcsrxoverride01__pcsrxoverride1__rxoverride1_rmw(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t  fld64);
bf_status_t bf_ll_umac4_pcsrxoverride02__pcsrxoverride2__rxoverride2_rd(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t *fld64, bool hw);
bf_status_t bf_ll_umac4_pcsrxoverride02__pcsrxoverride2__rxoverride2_wr(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t  fld64, bool hw);
bf_status_t bf_ll_umac4_pcsrxoverride02__pcsrxoverride2__rxoverride2_rmw(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t  fld64);
bf_status_t bf_ll_umac4_pcslcfg0__pcslcfg__amlock_rd(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t virtual_lane, uint64_t *reg64, uint64_t *fld64, bool hw);
bf_status_t bf_ll_umac4_pcslcfg0__pcslcfg__blocklock_rd(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t virtual_lane, uint64_t *reg64, uint64_t *fld64, bool hw);
bf_status_t bf_ll_umac4_pcslcfg0__pcslcfg__mapping_rd(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t virtual_lane, uint64_t *reg64, uint64_t *fld64, bool hw);
bf_status_t bf_ll_umac4_pcslcfg0__pcslcfg__amperiod_rd(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t virtual_lane, uint64_t *reg64, uint64_t *fld64, bool hw);
bf_status_t bf_ll_umac4_chconfig130__chconfig13__txtsoffset_rd(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t *fld64, bool hw);
bf_status_t bf_ll_umac4_chconfig130__chconfig13__txtsoffset_wr(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t  fld64, bool hw);
bf_status_t bf_ll_umac4_chconfig130__chconfig13__txtsoffset_rmw(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t  fld64);
bf_status_t bf_ll_umac4_version__version__version_rd(bf_dev_id_t dev_id, uint32_t logical_umac, uint64_t *reg64, uint64_t *fld64, bool hw);
bf_status_t bf_ll_umac4_version__version__version_wr(bf_dev_id_t dev_id, uint32_t logical_umac, uint64_t *reg64, uint64_t  fld64, bool hw);
bf_status_t bf_ll_umac4_version__version__version_rmw(bf_dev_id_t dev_id, uint32_t logical_umac, uint64_t *reg64, uint64_t  fld64);
bf_status_t bf_ll_umac4_intcontrol0__intcontrol__intsts_rd(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t *fld64, bool hw);
bf_status_t bf_ll_umac4_intcontrol0__intcontrol__intsts_wr(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t  fld64, bool hw);
bf_status_t bf_ll_umac4_intcontrol0__intcontrol__intsts_rmw(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t  fld64);
bf_status_t bf_ll_umac4_intcontrol0__intcontrol__intclr_rd(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t *fld64, bool hw);
bf_status_t bf_ll_umac4_intcontrol0__intcontrol__intclr_wr(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t  fld64, bool hw);
bf_status_t bf_ll_umac4_intcontrol0__intcontrol__intclr_rmw(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t  fld64);
bf_status_t bf_ll_umac4_intcontrol0__intcontrol__intena_rd(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t *fld64, bool hw);
bf_status_t bf_ll_umac4_intcontrol0__intcontrol__intena_wr(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t  fld64, bool hw);
bf_status_t bf_ll_umac4_intcontrol0__intcontrol__intena_rmw(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t  fld64);
bf_status_t bf_ll_umac4_intcontrol0__intcontrol__intraw_rd(bf_dev_id_t dev_id, uint32_t logical_umac, uint32_t channel, uint64_t *reg64, uint64_t *fld64, bool hw);
